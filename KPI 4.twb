<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook source-build='2019.3.0 (20193.19.0821.2225)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='pickjob (3)' inline='true' name='federated.1bnv4550k8n3d516fehqf18nt5nl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pickjob' name='textscan.12v4qpk0aspocl1agy8dk19xo241'>
            <connection class='textscan' directory='/Users/WKF/Dropbox/capstone/final_merged_csv' filename='pickjob.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[pickjob.csv].[ID]' />
              <expression op='[pickorder.csv].[PickJobId]' />
            </expression>
          </clause>
          <relation connection='textscan.12v4qpk0aspocl1agy8dk19xo241' name='pickjob.csv' table='[pickjob#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='integer' name='Number' ordinal='1' />
              <column datatype='integer' name='PickZoneLocationId' ordinal='2' />
              <column datatype='datetime' name='ContainerAssignedDate' ordinal='3' />
              <column datatype='datetime' name='StartedDate' ordinal='4' />
              <column datatype='datetime' name='PickedDate' ordinal='5' />
              <column datatype='datetime' name='EndedDate' ordinal='6' />
              <column datatype='integer' name='State' ordinal='7' />
              <column datatype='string' name='ErrorCode' ordinal='8' />
              <column datatype='integer' name='Priority' ordinal='9' />
              <column datatype='real' name='ContainerId' ordinal='10' />
              <column datatype='datetime' name='CreatedDate' ordinal='11' />
              <column datatype='string' name='CreatedBy' ordinal='12' />
              <column datatype='datetime' name='UpdatedDate' ordinal='13' />
              <column datatype='string' name='UpdatedBy' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.12v4qpk0aspocl1agy8dk19xo241' name='pickorder.csv' table='[pickorder#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ID' ordinal='15' />
              <column datatype='integer' name='PickJobId' ordinal='16' />
              <column datatype='string' name='Number' ordinal='17' />
              <column datatype='integer' name='Bin' ordinal='18' />
              <column datatype='integer' name='State' ordinal='19' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Bin]' value='[pickorder.csv].[Bin]' />
          <map key='[ContainerAssignedDate]' value='[pickjob.csv].[ContainerAssignedDate]' />
          <map key='[ContainerId]' value='[pickjob.csv].[ContainerId]' />
          <map key='[CreatedBy]' value='[pickjob.csv].[CreatedBy]' />
          <map key='[CreatedDate]' value='[pickjob.csv].[CreatedDate]' />
          <map key='[EndedDate]' value='[pickjob.csv].[EndedDate]' />
          <map key='[ErrorCode]' value='[pickjob.csv].[ErrorCode]' />
          <map key='[ID (pickorder.csv)]' value='[pickorder.csv].[ID]' />
          <map key='[ID]' value='[pickjob.csv].[ID]' />
          <map key='[Number (pickorder.csv)]' value='[pickorder.csv].[Number]' />
          <map key='[Number]' value='[pickjob.csv].[Number]' />
          <map key='[PickJobId]' value='[pickorder.csv].[PickJobId]' />
          <map key='[PickZoneLocationId]' value='[pickjob.csv].[PickZoneLocationId]' />
          <map key='[PickedDate]' value='[pickjob.csv].[PickedDate]' />
          <map key='[Priority]' value='[pickjob.csv].[Priority]' />
          <map key='[StartedDate]' value='[pickjob.csv].[StartedDate]' />
          <map key='[State (pickorder.csv)]' value='[pickorder.csv].[State]' />
          <map key='[State]' value='[pickjob.csv].[State]' />
          <map key='[UpdatedBy]' value='[pickjob.csv].[UpdatedBy]' />
          <map key='[UpdatedDate]' value='[pickjob.csv].[UpdatedDate]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickZoneLocationId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PickZoneLocationId]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>PickZoneLocationId</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainerAssignedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ContainerAssignedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ContainerAssignedDate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StartedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[StartedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>StartedDate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[PickedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>PickedDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EndedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[EndedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>EndedDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ErrorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ErrorCode]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ErrorCode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Priority</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Priority]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>Priority</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainerId</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ContainerId]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ContainerId</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[CreatedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>CreatedDate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreatedBy]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>CreatedBy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[UpdatedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>UpdatedDate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UpdatedBy]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>UpdatedBy</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID (pickorder.csv)]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickJobId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PickJobId]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>PickJobId</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Number (pickorder.csv)]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bin]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>Bin</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State (pickorder.csv)]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Container Assigned Date' datatype='datetime' name='[ContainerAssignedDate]' role='dimension' type='ordinal' />
      <column caption='Container Id' datatype='real' name='[ContainerId]' role='dimension' type='ordinal' />
      <column caption='Created By' datatype='string' name='[CreatedBy]' role='dimension' type='nominal' />
      <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
      <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
      <column caption='Error Code' datatype='string' name='[ErrorCode]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID (pickorder.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Number]' role='dimension' type='ordinal' />
      <column caption='Pick Job Id' datatype='integer' name='[PickJobId]' role='dimension' type='ordinal' />
      <column caption='Pick Zone Location Id' datatype='integer' name='[PickZoneLocationId]' role='dimension' type='ordinal' />
      <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
      <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
      <column caption='Updated By' datatype='string' name='[UpdatedBy]' role='dimension' type='nominal' />
      <column caption='Updated Date' datatype='datetime' name='[UpdatedDate]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.619048' measure-ordering='alphabetic' measure-percentage='0.380952' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pickjob+' inline='true' name='federated.1yfjvcq0m34md016st2c21l9z1eg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pickjob' name='textscan.0h6uq8o1nz68td1d8qxfr0nd5ss3'>
            <connection class='textscan' directory='/Users/kefei/Dropbox/capstone/final_merged_csv' filename='pickjob.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[pickjob.csv].[PickZoneLocationId]' />
              <expression op='[location.csv].[ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[pickjob.csv].[ID]' />
                <expression op='[pickorder.csv].[PickJobId]' />
              </expression>
            </clause>
            <relation connection='textscan.0h6uq8o1nz68td1d8qxfr0nd5ss3' name='pickjob.csv' table='[pickjob#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='ID' ordinal='0' />
                <column datatype='integer' name='Number' ordinal='1' />
                <column datatype='integer' name='PickZoneLocationId' ordinal='2' />
                <column datatype='datetime' name='ContainerAssignedDate' ordinal='3' />
                <column datatype='datetime' name='StartedDate' ordinal='4' />
                <column datatype='datetime' name='PickedDate' ordinal='5' />
                <column datatype='datetime' name='EndedDate' ordinal='6' />
                <column datatype='integer' name='State' ordinal='7' />
                <column datatype='string' name='ErrorCode' ordinal='8' />
                <column datatype='integer' name='Priority' ordinal='9' />
                <column datatype='real' name='ContainerId' ordinal='10' />
                <column datatype='datetime' name='CreatedDate' ordinal='11' />
                <column datatype='string' name='CreatedBy' ordinal='12' />
                <column datatype='datetime' name='UpdatedDate' ordinal='13' />
                <column datatype='string' name='UpdatedBy' ordinal='14' />
              </columns>
            </relation>
            <relation connection='textscan.0h6uq8o1nz68td1d8qxfr0nd5ss3' name='pickorder.csv' table='[pickorder#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='ID' ordinal='15' />
                <column datatype='integer' name='PickJobId' ordinal='16' />
                <column datatype='string' name='Number' ordinal='17' />
                <column datatype='integer' name='Bin' ordinal='18' />
                <column datatype='integer' name='State' ordinal='19' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0h6uq8o1nz68td1d8qxfr0nd5ss3' name='location.csv' table='[location#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ID' ordinal='20' />
              <column datatype='string' name='Name' ordinal='21' />
              <column datatype='string' name='Description' ordinal='22' />
              <column datatype='datetime' name='CreatedDate' ordinal='23' />
              <column datatype='string' name='CreatedBy' ordinal='24' />
              <column datatype='datetime' name='UpdatedDate' ordinal='25' />
              <column datatype='string' name='UpdatedBy' ordinal='26' />
              <column datatype='integer' name='IsDeleted' ordinal='27' />
              <column datatype='datetime' name='DeletedDate' ordinal='28' />
              <column datatype='string' name='DeletedBy' ordinal='29' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Bin]' value='[pickorder.csv].[Bin]' />
          <map key='[ContainerAssignedDate]' value='[pickjob.csv].[ContainerAssignedDate]' />
          <map key='[ContainerId]' value='[pickjob.csv].[ContainerId]' />
          <map key='[CreatedBy (location.csv)]' value='[location.csv].[CreatedBy]' />
          <map key='[CreatedBy]' value='[pickjob.csv].[CreatedBy]' />
          <map key='[CreatedDate (location.csv)]' value='[location.csv].[CreatedDate]' />
          <map key='[CreatedDate]' value='[pickjob.csv].[CreatedDate]' />
          <map key='[DeletedBy]' value='[location.csv].[DeletedBy]' />
          <map key='[DeletedDate]' value='[location.csv].[DeletedDate]' />
          <map key='[Description]' value='[location.csv].[Description]' />
          <map key='[EndedDate]' value='[pickjob.csv].[EndedDate]' />
          <map key='[ErrorCode]' value='[pickjob.csv].[ErrorCode]' />
          <map key='[ID (location.csv)]' value='[location.csv].[ID]' />
          <map key='[ID (pickorder.csv)]' value='[pickorder.csv].[ID]' />
          <map key='[ID]' value='[pickjob.csv].[ID]' />
          <map key='[IsDeleted]' value='[location.csv].[IsDeleted]' />
          <map key='[Name]' value='[location.csv].[Name]' />
          <map key='[Number (pickorder.csv)]' value='[pickorder.csv].[Number]' />
          <map key='[Number]' value='[pickjob.csv].[Number]' />
          <map key='[PickJobId]' value='[pickorder.csv].[PickJobId]' />
          <map key='[PickZoneLocationId]' value='[pickjob.csv].[PickZoneLocationId]' />
          <map key='[PickedDate]' value='[pickjob.csv].[PickedDate]' />
          <map key='[Priority]' value='[pickjob.csv].[Priority]' />
          <map key='[StartedDate]' value='[pickjob.csv].[StartedDate]' />
          <map key='[State (pickorder.csv)]' value='[pickorder.csv].[State]' />
          <map key='[State]' value='[pickjob.csv].[State]' />
          <map key='[UpdatedBy (location.csv)]' value='[location.csv].[UpdatedBy]' />
          <map key='[UpdatedBy]' value='[pickjob.csv].[UpdatedBy]' />
          <map key='[UpdatedDate (location.csv)]' value='[location.csv].[UpdatedDate]' />
          <map key='[UpdatedDate]' value='[pickjob.csv].[UpdatedDate]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickZoneLocationId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PickZoneLocationId]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>PickZoneLocationId</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainerAssignedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ContainerAssignedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ContainerAssignedDate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StartedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[StartedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>StartedDate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[PickedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>PickedDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EndedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[EndedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>EndedDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ErrorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ErrorCode]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ErrorCode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Priority</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Priority]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>Priority</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainerId</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ContainerId]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ContainerId</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[CreatedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>CreatedDate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreatedBy]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>CreatedBy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[UpdatedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>UpdatedDate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UpdatedBy]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>UpdatedBy</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID (pickorder.csv)]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickJobId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PickJobId]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>PickJobId</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Number (pickorder.csv)]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bin]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>Bin</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State (pickorder.csv)]</local-name>
            <parent-name>[pickorder.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[location.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[CreatedDate (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>CreatedDate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreatedBy (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>CreatedBy</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[UpdatedDate (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>UpdatedDate</remote-alias>
            <ordinal>25</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UpdatedBy (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>UpdatedBy</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsDeleted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IsDeleted]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>IsDeleted</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeletedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[DeletedDate]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>DeletedDate</remote-alias>
            <ordinal>28</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeletedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DeletedBy]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>DeletedBy</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Location Groups' datatype='string' name='[Calculation_1109644776514625537]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Name], &quot;Trim&quot;) then &quot;Trim and Foam&quot;&#10;ELSEIF CONTAINS([Name], &quot;HR&quot;) then &quot;Head Rest&quot;&#10;ELSE &quot;Alpha&quot;&#10;END' />
      </column>
      <column caption='Seperate completed and failed parts' datatype='string' name='[Calculation_3230347612750725120]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [State] == 50&#10;THEN &quot;completed&quot;&#10;ELSEIF [State] == 40&#10;THEN &quot;failed&quot;&#10;END' />
      </column>
      <column caption='Container Assigned Date' datatype='datetime' name='[ContainerAssignedDate]' role='dimension' type='ordinal' />
      <column caption='Container Id' datatype='real' name='[ContainerId]' role='dimension' type='ordinal' />
      <column caption='Created By' datatype='string' name='[CreatedBy]' role='dimension' type='nominal' />
      <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
      <column caption='Deleted By' datatype='string' name='[DeletedBy]' role='dimension' type='nominal' />
      <column caption='Deleted Date' datatype='datetime' name='[DeletedDate]' role='dimension' type='ordinal' />
      <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
      <column caption='Error Code' datatype='string' name='[ErrorCode]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID (location.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID (pickorder.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='Is Deleted' datatype='integer' name='[IsDeleted]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Number]' role='dimension' type='ordinal' />
      <column caption='Pick Job Id' datatype='integer' name='[PickJobId]' role='dimension' type='ordinal' />
      <column caption='Pick Zone Location Id' datatype='integer' name='[PickZoneLocationId]' role='dimension' type='ordinal' />
      <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
      <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
      <column caption='Updated By' datatype='string' name='[UpdatedBy]' role='dimension' type='nominal' />
      <column caption='Updated Date' datatype='datetime' name='[UpdatedDate]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_3230347612750725120]' derivation='None' name='[none:Calculation_3230347612750725120:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.686925' measure-ordering='alphabetic' measure-percentage='0.313076' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_3230347612750725120:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;completed&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pickjob (2)' inline='true' name='federated.03z0hbj1qoiw3i102bj0d07lgd1i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pickjob' name='textscan.1lewqq604bgm4p1b61pyu0sh6b7d'>
            <connection class='textscan' directory='/Users/kefei/Dropbox/capstone/final_merged_csv' filename='pickjob.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[pickjob.csv].[PickZoneLocationId]' />
              <expression op='[location.csv].[ID]' />
            </expression>
          </clause>
          <relation connection='textscan.1lewqq604bgm4p1b61pyu0sh6b7d' name='pickjob.csv' table='[pickjob#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='integer' name='Number' ordinal='1' />
              <column datatype='integer' name='PickZoneLocationId' ordinal='2' />
              <column datatype='datetime' name='ContainerAssignedDate' ordinal='3' />
              <column datatype='datetime' name='StartedDate' ordinal='4' />
              <column datatype='datetime' name='PickedDate' ordinal='5' />
              <column datatype='datetime' name='EndedDate' ordinal='6' />
              <column datatype='integer' name='State' ordinal='7' />
              <column datatype='string' name='ErrorCode' ordinal='8' />
              <column datatype='integer' name='Priority' ordinal='9' />
              <column datatype='real' name='ContainerId' ordinal='10' />
              <column datatype='datetime' name='CreatedDate' ordinal='11' />
              <column datatype='string' name='CreatedBy' ordinal='12' />
              <column datatype='datetime' name='UpdatedDate' ordinal='13' />
              <column datatype='string' name='UpdatedBy' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.1lewqq604bgm4p1b61pyu0sh6b7d' name='location.csv' table='[location#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ID' ordinal='15' />
              <column datatype='string' name='Name' ordinal='16' />
              <column datatype='string' name='Description' ordinal='17' />
              <column datatype='datetime' name='CreatedDate' ordinal='18' />
              <column datatype='string' name='CreatedBy' ordinal='19' />
              <column datatype='datetime' name='UpdatedDate' ordinal='20' />
              <column datatype='string' name='UpdatedBy' ordinal='21' />
              <column datatype='integer' name='IsDeleted' ordinal='22' />
              <column datatype='datetime' name='DeletedDate' ordinal='23' />
              <column datatype='string' name='DeletedBy' ordinal='24' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ContainerAssignedDate]' value='[pickjob.csv].[ContainerAssignedDate]' />
          <map key='[ContainerId]' value='[pickjob.csv].[ContainerId]' />
          <map key='[CreatedBy (location.csv)]' value='[location.csv].[CreatedBy]' />
          <map key='[CreatedBy]' value='[pickjob.csv].[CreatedBy]' />
          <map key='[CreatedDate (location.csv)]' value='[location.csv].[CreatedDate]' />
          <map key='[CreatedDate]' value='[pickjob.csv].[CreatedDate]' />
          <map key='[DeletedBy]' value='[location.csv].[DeletedBy]' />
          <map key='[DeletedDate]' value='[location.csv].[DeletedDate]' />
          <map key='[Description]' value='[location.csv].[Description]' />
          <map key='[EndedDate]' value='[pickjob.csv].[EndedDate]' />
          <map key='[ErrorCode]' value='[pickjob.csv].[ErrorCode]' />
          <map key='[ID (location.csv)]' value='[location.csv].[ID]' />
          <map key='[ID]' value='[pickjob.csv].[ID]' />
          <map key='[IsDeleted]' value='[location.csv].[IsDeleted]' />
          <map key='[Name]' value='[location.csv].[Name]' />
          <map key='[Number]' value='[pickjob.csv].[Number]' />
          <map key='[PickZoneLocationId]' value='[pickjob.csv].[PickZoneLocationId]' />
          <map key='[PickedDate]' value='[pickjob.csv].[PickedDate]' />
          <map key='[Priority]' value='[pickjob.csv].[Priority]' />
          <map key='[StartedDate]' value='[pickjob.csv].[StartedDate]' />
          <map key='[State]' value='[pickjob.csv].[State]' />
          <map key='[UpdatedBy (location.csv)]' value='[location.csv].[UpdatedBy]' />
          <map key='[UpdatedBy]' value='[pickjob.csv].[UpdatedBy]' />
          <map key='[UpdatedDate (location.csv)]' value='[location.csv].[UpdatedDate]' />
          <map key='[UpdatedDate]' value='[pickjob.csv].[UpdatedDate]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickZoneLocationId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PickZoneLocationId]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>PickZoneLocationId</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainerAssignedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ContainerAssignedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ContainerAssignedDate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StartedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[StartedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>StartedDate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[PickedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>PickedDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EndedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[EndedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>EndedDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ErrorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ErrorCode]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ErrorCode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Priority</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Priority]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>Priority</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainerId</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ContainerId]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ContainerId</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[CreatedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>CreatedDate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreatedBy]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>CreatedBy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[UpdatedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>UpdatedDate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UpdatedBy]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>UpdatedBy</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[location.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[CreatedDate (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>CreatedDate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreatedBy (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>CreatedBy</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[UpdatedDate (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>UpdatedDate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UpdatedBy (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>UpdatedBy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsDeleted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IsDeleted]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>IsDeleted</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeletedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[DeletedDate]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>DeletedDate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeletedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DeletedBy]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>DeletedBy</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Location Groups' datatype='string' name='[Calculation_1109644776514625537]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Name], &quot;Trim&quot;) then &quot;Trim and Foam&quot;&#10;ELSEIF CONTAINS([Name], &quot;HR&quot;) then &quot;Head Rest&quot;&#10;ELSE &quot;Alpha&quot;&#10;END' />
      </column>
      <column caption='Seperate completed and failed parts' datatype='string' name='[Calculation_3230347612750725120]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [State] == 50&#10;THEN &quot;completed&quot;&#10;ELSEIF [State] == 40&#10;THEN &quot;failed&quot;&#10;END' />
      </column>
      <column caption='Container Assigned Date' datatype='datetime' name='[ContainerAssignedDate]' role='dimension' type='ordinal' />
      <column caption='Container Id' datatype='real' name='[ContainerId]' role='dimension' type='ordinal' />
      <column caption='Created By' datatype='string' name='[CreatedBy]' role='dimension' type='nominal' />
      <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
      <column caption='Deleted By' datatype='string' name='[DeletedBy]' role='dimension' type='nominal' />
      <column caption='Deleted Date' datatype='datetime' name='[DeletedDate]' role='dimension' type='ordinal' />
      <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
      <column caption='Error Code' datatype='string' name='[ErrorCode]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID (location.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='Is Deleted' datatype='integer' name='[IsDeleted]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Number]' role='dimension' type='ordinal' />
      <column caption='Pick Zone Location Id' datatype='integer' name='[PickZoneLocationId]' role='dimension' type='ordinal' />
      <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
      <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
      <column caption='Updated By' datatype='string' name='[UpdatedBy]' role='dimension' type='nominal' />
      <column caption='Updated Date' datatype='datetime' name='[UpdatedDate]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_3230347612750725120]' derivation='None' name='[none:Calculation_3230347612750725120:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.72744' measure-ordering='alphabetic' measure-percentage='0.27256' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_3230347612750725120:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;completed&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pickjob' inline='true' name='federated.0tg6ucz13x50iy1513l4a1egojmq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pickjob' name='textscan.0o1598h06y8hes18adq990cxg3h5'>
            <connection class='textscan' directory='/Users/WKF/Dropbox/capstone/final_merged_csv' filename='pickjob.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[pickjob.csv].[PickZoneLocationId]' />
              <expression op='[location.csv].[ID]' />
            </expression>
          </clause>
          <relation connection='textscan.0o1598h06y8hes18adq990cxg3h5' name='pickjob.csv' table='[pickjob#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='integer' name='Number' ordinal='1' />
              <column datatype='integer' name='PickZoneLocationId' ordinal='2' />
              <column datatype='datetime' name='ContainerAssignedDate' ordinal='3' />
              <column datatype='datetime' name='StartedDate' ordinal='4' />
              <column datatype='datetime' name='PickedDate' ordinal='5' />
              <column datatype='datetime' name='EndedDate' ordinal='6' />
              <column datatype='integer' name='State' ordinal='7' />
              <column datatype='string' name='ErrorCode' ordinal='8' />
              <column datatype='integer' name='Priority' ordinal='9' />
              <column datatype='real' name='ContainerId' ordinal='10' />
              <column datatype='datetime' name='CreatedDate' ordinal='11' />
              <column datatype='string' name='CreatedBy' ordinal='12' />
              <column datatype='datetime' name='UpdatedDate' ordinal='13' />
              <column datatype='string' name='UpdatedBy' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0o1598h06y8hes18adq990cxg3h5' name='location.csv' table='[location#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='string' name='Description' ordinal='2' />
              <column datatype='datetime' name='CreatedDate' ordinal='3' />
              <column datatype='string' name='CreatedBy' ordinal='4' />
              <column datatype='datetime' name='UpdatedDate' ordinal='5' />
              <column datatype='string' name='UpdatedBy' ordinal='6' />
              <column datatype='integer' name='IsDeleted' ordinal='7' />
              <column datatype='datetime' name='DeletedDate' ordinal='8' />
              <column datatype='string' name='DeletedBy' ordinal='9' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ContainerAssignedDate]' value='[pickjob.csv].[ContainerAssignedDate]' />
          <map key='[ContainerId]' value='[pickjob.csv].[ContainerId]' />
          <map key='[CreatedBy (location.csv)]' value='[location.csv].[CreatedBy]' />
          <map key='[CreatedBy]' value='[pickjob.csv].[CreatedBy]' />
          <map key='[CreatedDate (location.csv)]' value='[location.csv].[CreatedDate]' />
          <map key='[CreatedDate]' value='[pickjob.csv].[CreatedDate]' />
          <map key='[DeletedBy]' value='[location.csv].[DeletedBy]' />
          <map key='[DeletedDate]' value='[location.csv].[DeletedDate]' />
          <map key='[Description]' value='[location.csv].[Description]' />
          <map key='[EndedDate]' value='[pickjob.csv].[EndedDate]' />
          <map key='[ErrorCode]' value='[pickjob.csv].[ErrorCode]' />
          <map key='[ID (location.csv)]' value='[location.csv].[ID]' />
          <map key='[ID]' value='[pickjob.csv].[ID]' />
          <map key='[IsDeleted]' value='[location.csv].[IsDeleted]' />
          <map key='[Name]' value='[location.csv].[Name]' />
          <map key='[Number]' value='[pickjob.csv].[Number]' />
          <map key='[PickZoneLocationId]' value='[pickjob.csv].[PickZoneLocationId]' />
          <map key='[PickedDate]' value='[pickjob.csv].[PickedDate]' />
          <map key='[Priority]' value='[pickjob.csv].[Priority]' />
          <map key='[StartedDate]' value='[pickjob.csv].[StartedDate]' />
          <map key='[State]' value='[pickjob.csv].[State]' />
          <map key='[UpdatedBy (location.csv)]' value='[location.csv].[UpdatedBy]' />
          <map key='[UpdatedBy]' value='[pickjob.csv].[UpdatedBy]' />
          <map key='[UpdatedDate (location.csv)]' value='[location.csv].[UpdatedDate]' />
          <map key='[UpdatedDate]' value='[pickjob.csv].[UpdatedDate]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickZoneLocationId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PickZoneLocationId]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>PickZoneLocationId</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainerAssignedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ContainerAssignedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ContainerAssignedDate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StartedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[StartedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>StartedDate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PickedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[PickedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>PickedDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EndedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[EndedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>EndedDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ErrorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ErrorCode]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ErrorCode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Priority</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Priority]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>Priority</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ContainerId</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ContainerId]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>ContainerId</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[CreatedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>CreatedDate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreatedBy]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>CreatedBy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[UpdatedDate]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>UpdatedDate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UpdatedBy]</local-name>
            <parent-name>[pickjob.csv]</parent-name>
            <remote-alias>UpdatedBy</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[location.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[CreatedDate (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>CreatedDate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreatedBy (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>CreatedBy</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[UpdatedDate (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>UpdatedDate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpdatedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UpdatedBy (location.csv)]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>UpdatedBy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsDeleted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IsDeleted]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>IsDeleted</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeletedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[DeletedDate]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>DeletedDate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeletedBy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DeletedBy]</local-name>
            <parent-name>[location.csv]</parent-name>
            <remote-alias>DeletedBy</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Created Date New' datatype='datetime' name='[Calculation_104990210919612416]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [CreatedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 13) END))&#10;&#10;AND [CreatedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [CreatedDate])&#10;&#10;ELSE [CreatedDate] END' />
      </column>
      <column caption='Ended Date New' datatype='datetime' name='[Calculation_104990210920153089]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [EndedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 13) END))&#10;&#10;AND [EndedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [EndedDate])&#10;&#10;ELSE [EndedDate] END' />
      </column>
      <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
      </column>
      <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
      </column>
      <column caption='Updated Date New' datatype='datetime' name='[Calculation_104990210923220997]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [UpdatedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [UpdatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [UpdatedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [UpdatedDate])) + 13) END))&#10;&#10;AND [UpdatedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [UpdatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [UpdatedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [UpdatedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [UpdatedDate])&#10;&#10;ELSE [UpdatedDate] END' />
      </column>
      <column caption='z-score of react time' datatype='real' name='[Calculation_1361283406089601024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Completion Time In Sec (copy)]) - WINDOW_AVG(SUM([Completion Time In Sec (copy)])))/WINDOW_STDEV(SUM([Completion Time In Sec (copy)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='top ' datatype='boolean' name='[Calculation_1361283406093041665]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1361283406089601024] &gt; 1.65 or &#10;[Calculation_1361283406089601024] &lt; -1.65'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Seperate completed and failed jobs (1)' datatype='string' name='[Calculation_3230347612750725120 1]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [State] == 50&#10;THEN &quot;completed&quot;&#10;ELSEIF [State] == 40&#10;THEN &quot;failed&quot;&#10;END' />
      </column>
      <column caption='Seperate completed and failed parts' datatype='string' name='[Calculation_3230347612750725120]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [State] == 50&#10;THEN &quot;completed&quot;&#10;ELSEIF [State] == 40&#10;THEN &quot;failed&quot;&#10;END' />
      </column>
      <column caption='Total Time' datatype='integer' name='[Calculation_4313181849936666631]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Completion Time In Sec (copy 2)] + [Completion Time In Sec (copy)]' />
      </column>
      <column caption='Percent of completion time' datatype='real' default-format='p0.00%' name='[Completion Time In Min (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [PickZoneLocationId]: SUM([Completion Time In Sec (copy 2)])} /&#10;({FIXED [PickZoneLocationId]: SUM([Completion Time In Sec (copy 2)])} +&#10;{FIXED [PickZoneLocationId]: SUM([Completion Time In Sec (copy)])} +&#10;{FIXED [PickZoneLocationId]: SUM([React Time In Min (copy)])})' />
      </column>
      <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
      </column>
      <column caption='React Time In Min' datatype='integer' name='[Completion Time In Sec (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210919612416], [Calculation_104990210922647556]))}' />
      </column>
      <column caption='Container Assigned Date' datatype='datetime' name='[ContainerAssignedDate]' role='dimension' type='ordinal' />
      <column caption='Container Id' datatype='real' name='[ContainerId]' role='dimension' type='ordinal' />
      <column caption='Created By' datatype='string' name='[CreatedBy]' role='dimension' type='nominal' />
      <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
      <column caption='Deleted By' datatype='string' name='[DeletedBy]' role='dimension' type='nominal' />
      <column caption='Deleted Date' datatype='datetime' name='[DeletedDate]' role='dimension' type='ordinal' />
      <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
      <column caption='Error Code' datatype='string' name='[ErrorCode]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID (location.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='Is Deleted' datatype='integer' name='[IsDeleted]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Number]' role='dimension' type='ordinal' />
      <column caption='Percent of Finalizing time' datatype='real' default-format='p0.00%' name='[Persent of completion time (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [PickZoneLocationId]: SUM([React Time In Min (copy)])} /&#10;({FIXED [PickZoneLocationId]: SUM([Completion Time In Sec (copy 2)])} +&#10;{FIXED [PickZoneLocationId]: SUM([Completion Time In Sec (copy)])} +&#10;{FIXED [PickZoneLocationId]: SUM([React Time In Min (copy)])})' />
      </column>
      <column caption='Percent of React time' datatype='real' default-format='p0.00%' name='[Persent of completion time (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [PickZoneLocationId]: SUM([Completion Time In Sec (copy)])} /&#10;({FIXED [PickZoneLocationId]: SUM([Completion Time In Sec (copy 2)])} +&#10;{FIXED [PickZoneLocationId]: SUM([Completion Time In Sec (copy)])} +&#10;{FIXED [PickZoneLocationId]: SUM([React Time In Min (copy)])})' />
      </column>
      <column caption='Pick Zone Location Id' datatype='integer' name='[PickZoneLocationId]' role='dimension' type='ordinal' />
      <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
      <column caption='Finalizing Time in Min' datatype='integer' name='[React Time In Min (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922459139], [Calculation_104990210920153089]))}' />
      </column>
      <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Total Time (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Completion Time In Sec (copy 2)] + [Completion Time In Sec (copy)]' />
      </column>
      <column caption='Updated By' datatype='string' name='[UpdatedBy]' role='dimension' type='nominal' />
      <column caption='Updated Date' datatype='datetime' name='[UpdatedDate]' role='dimension' type='ordinal' />
      <column caption='top  (completion time)' datatype='boolean' name='[top  (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[z-score of react time (copy)] &gt; 1.65'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='z-score of completion time' datatype='real' name='[z-score of react time (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Completion Time In Sec (copy 2)]) - WINDOW_AVG(SUM([Completion Time In Sec (copy 2)])))/WINDOW_STDEV(SUM([Completion Time In Sec (copy 2)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Attribute' name='[attr:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4313181849936666631]' derivation='Avg' name='[avg:Calculation_4313181849936666631:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Avg' name='[avg:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Avg' name='[avg:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[React Time In Min (copy)]' derivation='Avg' name='[avg:React Time In Min (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Max' name='[max:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Max' name='[max:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Median' name='[med:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Median' name='[med:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Min' name='[min:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3230347612750725120]' derivation='None' name='[none:Calculation_3230347612750725120:nk]' pivot='key' type='nominal' />
      <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[PickZoneLocationId]' derivation='None' name='[none:PickZoneLocationId:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Avg' name='[pcto:avg:Completion Time In Sec (copy):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[PickZoneLocationId]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Avg' name='[pcto:avg:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Avg' name='[rank:avg:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_4313181849936666631]' derivation='Sum' name='[sum:Calculation_4313181849936666631:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Min (copy)]' derivation='Sum' name='[sum:Completion Time In Min (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Sum' name='[sum:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Sum' name='[sum:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Persent of completion time (copy) (copy)]' derivation='Sum' name='[sum:Persent of completion time (copy) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Persent of completion time (copy)]' derivation='Sum' name='[sum:Persent of completion time (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[React Time In Min (copy)]' derivation='Sum' name='[sum:React Time In Min (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_104990210922459139]' derivation='Day-Trunc' name='[tdy:Calculation_104990210922459139:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1361283406089601024]' derivation='User' name='[usr:Calculation_1361283406089601024:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1361283406093041665]' derivation='User' name='[usr:Calculation_1361283406093041665:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[Calculation_1361283406089601024]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[z-score of react time (copy)]' derivation='User' name='[usr:z-score of react time (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Completion Time In Sec (copy)]' derivation='Avg' name='[win:avg:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group hidden='true' name='[Exclusions (DAY(Picked Date New),ID)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Calculation_104990210922459139:ok]' />
          <groupfilter function='level-members' level='[none:ID:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Pick Zone Location Id,Seperate completed and failed jobs)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:PickZoneLocationId:ok]' />
          <groupfilter function='level-members' level='[none:Calculation_3230347612750725120:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.447619' measure-ordering='alphabetic' measure-percentage='0.552381' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_3230347612750725120:nk]' type='palette'>
            <map to='#8cd17d'>
              <bucket>&quot;completed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[max:Completion Time In Sec (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Calculation_4289256476835385344:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Min (copy):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Persent of completion time (copy):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Calculation_4313181849923837956:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Calculation_4313181849936666631:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[cnt:Calculation_4313181849923837956:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Calculation_4313181849923837956:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Calculation_4313181849923837956:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Calculation_4313181849936666631:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:React Time In Min (copy):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4313181849931079686:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Persent of completion time (copy) (copy):qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[attr:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Calculation_4289256476835385344:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[max:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[min:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[pcto:avg:Completion Time In Sec (copy):qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[pcto:avg:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[rank:avg:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Calculation_4289256476835385344:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tg6ucz13x50iy1513l4a1egojmq].[win:avg:Completion Time In Sec (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Error Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Error Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Seperate completed and failed parts' datatype='string' name='[Calculation_3230347612750725120]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [State] == 50&#10;THEN &quot;completed&quot;&#10;ELSEIF [State] == 40&#10;THEN &quot;failed&quot;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Pick Zone Location Id' datatype='integer' name='[PickZoneLocationId]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[State]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3230347612750725120]' derivation='None' name='[none:Calculation_3230347612750725120:nk]' pivot='key' type='nominal' />
            <column-instance column='[PickZoneLocationId]' derivation='None' name='[none:PickZoneLocationId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3230347612750725120:nk]' />
              <groupfilter function='member' level='[none:Calculation_3230347612750725120:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]' value='102' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[pcto:sum:Number of Records:qk]' />
              <text column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</rows>
        <cols total='true'>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</cols>
        <percentages enabled='true' mode='row' />
      </table>
      <simple-id uuid='{CB312BA9-4E7C-44BB-BA80-2860F9003D6D}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Created Date New' datatype='datetime' name='[Calculation_104990210919612416]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [CreatedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 13) END))&#10;&#10;AND [CreatedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [CreatedDate])&#10;&#10;ELSE [CreatedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='z-score of react time' datatype='real' name='[Calculation_1361283406089601024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Completion Time In Sec (copy)]) - WINDOW_AVG(SUM([Completion Time In Sec (copy)])))/WINDOW_STDEV(SUM([Completion Time In Sec (copy)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='top ' datatype='boolean' name='[Calculation_1361283406093041665]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1361283406089601024] &gt; 1.65 or &#10;[Calculation_1361283406089601024] &lt; -1.65'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='React Time In Min' datatype='integer' name='[Completion Time In Sec (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210919612416], [Calculation_104990210922647556]))}' />
            </column>
            <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_104990210919612416]' derivation='Month' name='[mn:Calculation_104990210919612416:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1361283406089601024]' derivation='User' name='[usr:Calculation_1361283406089601024:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1361283406093041665]' derivation='User' name='[usr:Calculation_1361283406093041665:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[Calculation_1361283406089601024]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' field-type='nominal' max-size='1' min-size='0.368994' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]' />
              <size column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1877857446670532' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:Calculation_104990210919612416:ok]</cols>
      </table>
      <simple-id uuid='{62928D5B-399B-48AE-9EDC-1A703A478061}' />
    </worksheet>
    <worksheet name='Sheet 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_104990210922647556]' derivation='Month' name='[mn:Calculation_104990210922647556:ok]' pivot='key' type='ordinal' />
            <column caption='top  (completion time)' datatype='boolean' name='[top  (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[z-score of react time (copy)] &gt; 1.65'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[top  (copy)]' derivation='User' name='[usr:top  (copy):nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[z-score of react time (copy)]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[z-score of react time (copy)]' derivation='User' name='[usr:z-score of react time (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column caption='z-score of completion time' datatype='real' name='[z-score of react time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Completion Time In Sec (copy 2)]) - WINDOW_AVG(SUM([Completion Time In Sec (copy 2)])))/WINDOW_STDEV(SUM([Completion Time In Sec (copy 2)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' field-type='nominal' max-size='1' min-size='0.418158' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]' />
              <size column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.92010712623596191' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:Calculation_104990210922647556:ok]</cols>
      </table>
      <simple-id uuid='{AED064EB-6D6A-4665-83AB-8CE32FBD66EC}' />
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Created Date New' datatype='datetime' name='[Calculation_104990210919612416]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [CreatedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 13) END))&#10;&#10;AND [CreatedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [CreatedDate])&#10;&#10;ELSE [CreatedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='z-score of react time' datatype='real' name='[Calculation_1361283406089601024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Completion Time In Sec (copy)]) - WINDOW_AVG(SUM([Completion Time In Sec (copy)])))/WINDOW_STDEV(SUM([Completion Time In Sec (copy)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='top ' datatype='boolean' name='[Calculation_1361283406093041665]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1361283406089601024] &gt; 1.65 or &#10;[Calculation_1361283406089601024] &lt; -1.65'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='React Time In Min' datatype='integer' name='[Completion Time In Sec (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210919612416], [Calculation_104990210922647556]))}' />
            </column>
            <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1361283406089601024]' derivation='User' name='[usr:Calculation_1361283406089601024:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1361283406093041665]' derivation='User' name='[usr:Calculation_1361283406093041665:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[Calculation_1361283406089601024]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_104990210919612416]' derivation='Weekday' name='[wd:Calculation_104990210919612416:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' field-type='nominal' max-size='1' min-size='0.507664' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]' />
              <size column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.65242856740951538' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[wd:Calculation_104990210919612416:ok]</cols>
      </table>
      <simple-id uuid='{D17D8955-405F-49D9-A171-A70B431FE140}' />
    </worksheet>
    <worksheet name='Sheet 23'>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column caption='top  (completion time)' datatype='boolean' name='[top  (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[z-score of react time (copy)] &gt; 1.65'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[top  (copy)]' derivation='User' name='[usr:top  (copy):nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[z-score of react time (copy)]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[z-score of react time (copy)]' derivation='User' name='[usr:z-score of react time (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_104990210922647556]' derivation='Weekday' name='[wd:Calculation_104990210922647556:ok]' pivot='key' type='ordinal' />
            <column caption='z-score of completion time' datatype='real' name='[z-score of react time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Completion Time In Sec (copy 2)]) - WINDOW_AVG(SUM([Completion Time In Sec (copy 2)])))/WINDOW_STDEV(SUM([Completion Time In Sec (copy 2)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' field-type='nominal' max-size='1' min-size='0.38475' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]' />
              <size column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[wd:Calculation_104990210922647556:ok]</cols>
      </table>
      <simple-id uuid='{78723D1F-BDE5-4573-B349-09BC5037F7C7}' />
    </worksheet>
    <worksheet name='completion time per day'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Total Completion Time per Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Sum' name='[sum:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_104990210922459139]' derivation='Day-Trunc' name='[tdy:Calculation_104990210922459139:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_104990210922647556]' derivation='Day-Trunc' name='[tdy:Calculation_104990210922647556:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922459139:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922459139:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]' scope='rows' value='Total Completion Time In Min' />
            <format attr='title' class='0' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922647556:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922647556:qk]</cols>
      </table>
      <simple-id uuid='{5AEF99D2-D29D-49FB-9393-F6DC17EBDFAA}' />
    </worksheet>
    <worksheet name='reaction time per day'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Total Reacted Time per Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Created Date New' datatype='datetime' name='[Calculation_104990210919612416]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [CreatedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 13) END))&#10;&#10;AND [CreatedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [CreatedDate])&#10;&#10;ELSE [CreatedDate] END' />
            </column>
            <column caption='Ended Date New' datatype='datetime' name='[Calculation_104990210920153089]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [EndedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 13) END))&#10;&#10;AND [EndedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [EndedDate])&#10;&#10;ELSE [EndedDate] END' />
            </column>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column caption='React Time In Min' datatype='integer' name='[Completion Time In Sec (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210919612416], [Calculation_104990210922647556]))}' />
            </column>
            <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
            <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Finalizing Time in Min' datatype='integer' name='[React Time In Min (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922459139], [Calculation_104990210920153089]))}' />
            </column>
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Avg' name='[avg:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[React Time In Min (copy)]' derivation='Avg' name='[avg:React Time In Min (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[EndedDate]' derivation='Month' name='[mn:EndedDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy)]' derivation='Sum' name='[sum:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_104990210919612416]' derivation='Day-Trunc' name='[tdy:Calculation_104990210919612416:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EndedDate]' derivation='Week' name='[wk:EndedDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:EndedDate:ok]' />
              <groupfilter function='member' level='[mn:EndedDate:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='61' />
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wk:EndedDate:ok]' value='61' />
            <format attr='title' class='0' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' scope='rows' value='Total React Time In Min' />
            <format attr='title' class='0' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210919612416:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='68' />
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wk:EndedDate:ok]' value='68' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210919612416:qk]</cols>
      </table>
      <simple-id uuid='{CD7EB0E6-13E1-455E-B38E-C971CFB1071A}' />
    </worksheet>
    <worksheet name='total completion time spend per month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Total Completion Time per Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Avg' name='[avg:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_104990210922647556]' derivation='Month' name='[mn:Calculation_104990210922647556:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EndedDate]' derivation='Month' name='[mn:EndedDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Sum' name='[sum:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:EndedDate:ok]' />
              <groupfilter function='member' level='[mn:EndedDate:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='61' />
            <format attr='title' class='0' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]' scope='rows' value='Total Completion Time In Min' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:Calculation_104990210922647556:ok]</cols>
      </table>
      <simple-id uuid='{F86602CD-EB2E-4434-A2A5-85CD4EC6FA3A}' />
    </worksheet>
    <worksheet name='total completion time spend per week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Total Completion Time per Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Ended Date New' datatype='datetime' name='[Calculation_104990210920153089]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [EndedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 13) END))&#10;&#10;AND [EndedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [EndedDate])&#10;&#10;ELSE [EndedDate] END' />
            </column>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Finalizing Time in Min' datatype='integer' name='[React Time In Min (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922459139], [Calculation_104990210920153089]))}' />
            </column>
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Avg' name='[avg:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[React Time In Min (copy)]' derivation='Avg' name='[avg:React Time In Min (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[EndedDate]' derivation='Month' name='[mn:EndedDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_104990210922647556]' derivation='Weekday' name='[wd:Calculation_104990210922647556:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EndedDate]' derivation='Weekday' name='[wd:EndedDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EndedDate]' derivation='Week' name='[wk:EndedDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:EndedDate:ok]' />
              <groupfilter function='member' level='[mn:EndedDate:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='61' />
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wk:EndedDate:ok]' value='61' />
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wd:EndedDate:ok]' value='61' />
            <format attr='title' class='0' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' scope='rows' value='Total Completion Time In Min' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='68' />
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wk:EndedDate:ok]' value='68' />
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wd:EndedDate:ok]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[wd:Calculation_104990210922647556:ok]</cols>
      </table>
      <simple-id uuid='{091C3690-9166-4981-B05C-8E58D88E4937}' />
    </worksheet>
    <worksheet name='total reacted time spend per month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Total Reacted Time per Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Created Date New' datatype='datetime' name='[Calculation_104990210919612416]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [CreatedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 13) END))&#10;&#10;AND [CreatedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [CreatedDate])&#10;&#10;ELSE [CreatedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='React Time In Min' datatype='integer' name='[Completion Time In Sec (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210919612416], [Calculation_104990210922647556]))}' />
            </column>
            <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
            <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy)]' derivation='Avg' name='[avg:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_104990210919612416]' derivation='Month' name='[mn:Calculation_104990210919612416:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EndedDate]' derivation='Month' name='[mn:EndedDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy)]' derivation='Sum' name='[sum:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:EndedDate:ok]' />
              <groupfilter function='member' level='[mn:EndedDate:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='61' />
            <format attr='title' class='0' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' scope='rows' value='Total React Time In Min' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy):qk]' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:Calculation_104990210919612416:ok]</cols>
      </table>
      <simple-id uuid='{B0F774E6-9846-48C8-9FAE-FF98904F7C5D}' />
    </worksheet>
    <worksheet name='total reacted time spend per week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Total Reacted Time per Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Created Date New' datatype='datetime' name='[Calculation_104990210919612416]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [CreatedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 13) END))&#10;&#10;AND [CreatedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [CreatedDate])&#10;&#10;ELSE [CreatedDate] END' />
            </column>
            <column caption='Ended Date New' datatype='datetime' name='[Calculation_104990210920153089]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [EndedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 13) END))&#10;&#10;AND [EndedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [EndedDate])&#10;&#10;ELSE [EndedDate] END' />
            </column>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column caption='React Time In Min' datatype='integer' name='[Completion Time In Sec (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210919612416], [Calculation_104990210922647556]))}' />
            </column>
            <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
            <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Finalizing Time in Min' datatype='integer' name='[React Time In Min (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922459139], [Calculation_104990210920153089]))}' />
            </column>
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Avg' name='[avg:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[React Time In Min (copy)]' derivation='Avg' name='[avg:React Time In Min (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[EndedDate]' derivation='Month' name='[mn:EndedDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy)]' derivation='Sum' name='[sum:Completion Time In Sec (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_104990210919612416]' derivation='Weekday' name='[wd:Calculation_104990210919612416:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EndedDate]' derivation='Weekday' name='[wd:EndedDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EndedDate]' derivation='Week' name='[wk:EndedDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:EndedDate:ok]' />
              <groupfilter function='member' level='[mn:EndedDate:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='61' />
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wk:EndedDate:ok]' value='61' />
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wd:EndedDate:ok]' value='61' />
            <format attr='title' class='0' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' scope='rows' value='Total React Time In Min' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='68' />
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wk:EndedDate:ok]' value='68' />
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wd:EndedDate:ok]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[wd:Calculation_104990210919612416:ok]</cols>
      </table>
      <simple-id uuid='{B40389D2-7334-4C11-B441-6B6200216FC6}' />
    </worksheet>
    <worksheet name='z-score of completion time per day'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Z-Score of Total Completion Time per Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_104990210922459139]' derivation='Day-Trunc' name='[tdy:Calculation_104990210922459139:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_104990210922647556]' derivation='Day-Trunc' name='[tdy:Calculation_104990210922647556:qk]' pivot='key' type='quantitative' />
            <column caption='top  (completion time)' datatype='boolean' name='[top  (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[z-score of react time (copy)] &gt; 1.65'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[top  (copy)]' derivation='User' name='[usr:top  (copy):nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[z-score of react time (copy)]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[z-score of react time (copy)]' derivation='User' name='[usr:z-score of react time (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column caption='z-score of completion time' datatype='real' name='[z-score of react time (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Completion Time In Sec (copy 2)]) - WINDOW_AVG(SUM([Completion Time In Sec (copy 2)])))/WINDOW_STDEV(SUM([Completion Time In Sec (copy 2)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922459139:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922459139:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' field-type='nominal' max-size='1' min-size='0.436095' type='catsize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]' />
              <size column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='size' value='0.75950002670288086' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922647556:qk]</cols>
      </table>
      <simple-id uuid='{B0194AC5-5114-4F80-8B27-CD66781604F4}' />
    </worksheet>
    <worksheet name='z-score of reaction time per day'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Z-Score of Total Reacted Time per Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pickjob' name='federated.0tg6ucz13x50iy1513l4a1egojmq' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg6ucz13x50iy1513l4a1egojmq'>
            <column caption='Created Date New' datatype='datetime' name='[Calculation_104990210919612416]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [CreatedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 13) END))&#10;&#10;AND [CreatedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [CreatedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [CreatedDate])&#10;&#10;ELSE [CreatedDate] END' />
            </column>
            <column caption='Ended Date New' datatype='datetime' name='[Calculation_104990210920153089]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [EndedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [EndedDate])) + 13) END))&#10;&#10;AND [EndedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [EndedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [EndedDate])&#10;&#10;ELSE [EndedDate] END' />
            </column>
            <column caption='Picked Date New' datatype='datetime' name='[Calculation_104990210922459139]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [PickedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [PickedDate])) + 13) END))&#10;&#10;AND [PickedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [PickedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [PickedDate])&#10;&#10;ELSE [PickedDate] END' />
            </column>
            <column caption='Started Date New' datatype='datetime' name='[Calculation_104990210922647556]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='IF [StartedDate] &gt;= DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 7&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 2, DATETRUNC(&apos;year&apos;, [StartedDate])) + 13) END))&#10;&#10;AND [StartedDate] &lt; DATEADD(&apos;hour&apos;, 2,&#10;(IF DATEPART(&apos;weekday&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))) = 1&#10;THEN DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate]))&#10;ELSE DATETRUNC(&apos;week&apos;, DATEADD(&apos;month&apos;, 10, DATETRUNC(&apos;year&apos;, [StartedDate])) + 6) END))&#10;&#10;THEN DATEADD(&apos;hour&apos;, 1, [StartedDate])&#10;&#10;ELSE [StartedDate] END' />
            </column>
            <column caption='z-score of react time' datatype='real' name='[Calculation_1361283406089601024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Completion Time In Sec (copy)]) - WINDOW_AVG(SUM([Completion Time In Sec (copy)])))/WINDOW_STDEV(SUM([Completion Time In Sec (copy)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='top ' datatype='boolean' name='[Calculation_1361283406093041665]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1361283406089601024] &gt; 1.65 or &#10;[Calculation_1361283406089601024] &lt; -1.65'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Completion Time In Min' datatype='integer' name='[Completion Time In Sec (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922647556], [Calculation_104990210922459139]))}' />
            </column>
            <column caption='React Time In Min' datatype='integer' name='[Completion Time In Sec (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210919612416], [Calculation_104990210922647556]))}' />
            </column>
            <column caption='Created Date' datatype='datetime' name='[CreatedDate]' role='dimension' type='ordinal' />
            <column caption='Ended Date' datatype='datetime' name='[EndedDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
            <column caption='Picked Date' datatype='datetime' name='[PickedDate]' role='dimension' type='ordinal' />
            <column caption='Finalizing Time in Min' datatype='integer' name='[React Time In Min (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ID] : MAX(DATEDIFF(&apos;minute&apos;, [Calculation_104990210922459139], [Calculation_104990210920153089]))}' />
            </column>
            <column caption='Started Date' datatype='datetime' name='[StartedDate]' role='dimension' type='ordinal' />
            <column-instance column='[Completion Time In Sec (copy 2)]' derivation='Avg' name='[avg:Completion Time In Sec (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[React Time In Min (copy)]' derivation='Avg' name='[avg:React Time In Min (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[EndedDate]' derivation='Month' name='[mn:EndedDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_104990210919612416]' derivation='Day-Trunc' name='[tdy:Calculation_104990210919612416:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1361283406089601024]' derivation='User' name='[usr:Calculation_1361283406089601024:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1361283406093041665]' derivation='User' name='[usr:Calculation_1361283406093041665:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[Calculation_1361283406089601024]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[EndedDate]' derivation='Week' name='[wk:EndedDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:EndedDate:ok]' />
              <groupfilter function='member' level='[mn:EndedDate:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</column>
            <column>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:React Time In Min (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='61' />
            <format attr='height' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wk:EndedDate:ok]' value='61' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]' value='68' />
            <format attr='width' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[wk:EndedDate:ok]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' field-type='nominal' max-size='1' min-size='0.436095' type='catsize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]' />
              <size column='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.75950002670288086' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]</rows>
        <cols>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210919612416:qk]</cols>
      </table>
      <simple-id uuid='{93181B0B-1DD6-46DB-9CE3-088818389FF5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='duration per day'>
      <style />
      <size maxheight='600' maxwidth='700' minheight='600' minwidth='700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='46' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
            <zone h='97334' id='11' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
              <zone h='97334' id='7' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
                <zone h='97334' id='5' type='layout-basic' w='97714' x='1143' y='1333'>
                  <zone h='48667' id='3' name='reaction time per day' w='97714' x='1143' y='1333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48667' id='44' name='z-score of reaction time per day' w='97714' x='1143' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='54' param='vert' type='layout-flow' w='97714' x='1143' y='1333'>
                <zone fixed-size='280' h='48667' id='3' is-fixed='true' name='reaction time per day' w='97714' x='1143' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48667' id='44' is-fixed='true' name='z-score of reaction time per day' w='97714' x='1143' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{75805DC6-8530-4F00-ADCC-9946382A6864}' />
    </dashboard>
    <dashboard name='duration per day (2)'>
      <style />
      <size maxheight='600' maxwidth='700' minheight='600' minwidth='700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='46' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
            <zone h='97334' id='11' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
              <zone h='97334' id='7' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
                <zone h='97334' id='5' type='layout-basic' w='97714' x='1143' y='1333'>
                  <zone h='48667' id='9' name='completion time per day' w='97714' x='1143' y='1333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48667' id='44' name='z-score of completion time per day' w='97714' x='1143' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='53' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='54' param='vert' type='layout-flow' w='97714' x='1143' y='1333'>
                <zone fixed-size='280' h='48667' id='9' is-fixed='true' name='completion time per day' w='97714' x='1143' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48667' id='44' is-fixed='true' name='z-score of completion time per day' w='97714' x='1143' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E925421F-78D0-40B7-BF89-47F893CB782D}' />
    </dashboard>
    <dashboard name='duration per month'>
      <style />
      <size maxheight='600' maxwidth='700' minheight='600' minwidth='700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='11' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
            <zone h='97334' id='7' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
              <zone h='97334' id='5' type='layout-basic' w='97714' x='1143' y='1333'>
                <zone h='48667' id='3' name='total reacted time spend per month' w='97714' x='1143' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48667' id='9' name='total completion time spend per month' w='97714' x='1143' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13000' id='8' name='total reacted time spend per month' pane-specification-id='6' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]' type='color' w='23333' x='17000' y='3167' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='51' param='vert' type='layout-flow' w='97714' x='1143' y='1333'>
                <zone fixed-size='280' h='48667' id='3' is-fixed='true' name='total reacted time spend per month' w='97714' x='1143' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13000' id='8' name='total reacted time spend per month' pane-specification-id='6' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]' type='color' w='23333' x='17000' y='3167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48667' id='9' is-fixed='true' name='total completion time spend per month' w='97714' x='1143' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EF1A96DC-A097-4B2F-93A7-FD25F3E42B0B}' />
    </dashboard>
    <dashboard name='duration per week'>
      <style />
      <size maxheight='600' maxwidth='700' minheight='600' minwidth='700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='11' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
            <zone h='97334' id='7' param='horz' type='layout-flow' w='97714' x='1143' y='1333'>
              <zone h='97334' id='5' type='layout-basic' w='97714' x='1143' y='1333'>
                <zone h='48667' id='3' name='total reacted time spend per week' w='97714' x='1143' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48667' id='9' name='total completion time spend per week' w='97714' x='1143' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='51' param='vert' type='layout-flow' w='97714' x='1143' y='1333'>
                <zone fixed-size='280' h='48667' id='3' is-fixed='true' name='total reacted time spend per week' w='97714' x='1143' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48667' id='9' is-fixed='true' name='total completion time spend per week' w='97714' x='1143' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1EAFE060-D1C6-47EB-8347-C1B8997449E0}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='total reacted time spend per month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4289256476835385344:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869647873:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869664258:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (bin):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (copy 2):ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:ID:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number of Records:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tyr:Calculation_104990210922647556:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4289256476839591942:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:StartedDate:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{A94A2566-DF37-4552-9738-720710863696}' />
    </window>
    <window class='worksheet' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A67F864-1A1D-4E49-B22F-F70857F90804}' />
    </window>
    <window class='worksheet' name='total completion time spend per month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4289256476835385344:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869647873:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869664258:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (bin):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (copy 2):ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:ID:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number of Records:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tyr:Calculation_104990210922647556:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4289256476839591942:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210922459139:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:PickedDate:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{4D19336B-82B6-481A-972F-3C6104D31EF0}' />
    </window>
    <window class='worksheet' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tyr:Calculation_104990210922647556:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A49834AF-F37A-4E9D-9BA3-FC60BDF2EE6C}' />
    </window>
    <window class='worksheet' name='total reacted time spend per week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4289256476835385344:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869647873:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869664258:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (bin):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (copy 2):ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:ID:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number of Records:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tyr:Calculation_104990210922647556:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4289256476839591942:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:CreatedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:StartedDate:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{75144EB1-3A67-4D90-BDE4-89F67D29D499}' />
    </window>
    <window class='worksheet' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EF5175D-0C2B-40FF-9290-5525FF976787}' />
    </window>
    <window class='worksheet' name='total completion time spend per week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4289256476835385344:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869647873:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869664258:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (bin):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (copy 2):ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:ID:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number of Records:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tyr:Calculation_104990210922647556:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4289256476839591942:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210922459139:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:CreatedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:PickedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:StartedDate:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{3D9C572A-1A24-4AA0-95DB-506FD396C5DA}' />
    </window>
    <window class='worksheet' name='Sheet 23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tyr:Calculation_104990210922647556:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D5875B6-ED83-4A9C-8DA0-8400A624B8D0}' />
    </window>
    <window class='worksheet' name='reaction time per day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4289256476835385344:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869647873:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869664258:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (bin):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (copy 2):ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:ID:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number of Records:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4289256476839591942:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210920153089:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:CreatedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:StartedDate:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{36312FBD-4CCC-4D46-983F-755DB7D95B62}' />
    </window>
    <window class='worksheet' name='z-score of reaction time per day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406089601024:qk]' type='color' />
            <card pane-specification-id='8' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4289256476835385344:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869647873:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869664258:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (bin):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (copy 2):ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:ID:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number of Records:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_1361283406093041665:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4289256476839591942:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210920153089:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:CreatedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:StartedDate:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{51F09C06-A5B4-441B-9066-BE1D04116BA4}' />
    </window>
    <window class='worksheet' name='completion time per day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[sum:Completion Time In Sec (copy 2):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922459139:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</field>
                  <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922459139:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9.9285714285714288</value>
                <value>#2019-01-31 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4289256476835385344:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869647873:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869664258:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (bin):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (copy 2):ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:ID:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number of Records:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tyr:Calculation_104990210922647556:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4289256476839591942:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210922459139:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:CreatedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:PickedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:StartedDate:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{41749B13-843D-4916-A45E-C2699F0F639B}' />
    </window>
    <window class='worksheet' name='z-score of completion time per day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]' type='color' />
            <card pane-specification-id='10' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922459139:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[avg:Completion Time In Sec (copy 2):qk]</field>
                  <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tdy:Calculation_104990210922459139:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9.9285714285714288</value>
                <value>#2019-01-31 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[med:Completion Time In Sec (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[mn:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4289256476835385344:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869647873:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_4313181849869664258:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (bin):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Completion Time In Sec (copy 2):ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:ID:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number of Records:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Number:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[tyr:Calculation_104990210922647556:qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:Calculation_4289256476839591942:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:top  (copy):nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[usr:z-score of react time (copy):qk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210919612416:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:Calculation_104990210922459139:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:CreatedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:EndedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:PickedDate:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[yr:StartedDate:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{D5BB6400-B55B-4071-AF81-495861BD34ED}' />
    </window>
    <window class='worksheet' name='Error Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tg6ucz13x50iy1513l4a1egojmq].[pcto:sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:Calculation_3230347612750725120:nk]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[none:PickZoneLocationId:ok]</field>
            <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[pcto:sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A503B2D-74F7-48B0-80A3-CD557CB45E7D}' />
    </window>
    <window class='dashboard' name='duration per day'>
      <viewpoints>
        <viewpoint name='reaction time per day'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='z-score of reaction time per day'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{23A09D50-1B32-4CF5-B427-BD76DF0DBEC7}' />
    </window>
    <window class='dashboard' maximized='true' name='duration per day (2)'>
      <viewpoints>
        <viewpoint name='completion time per day'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='z-score of completion time per day'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FC4E410E-FE74-427E-A2EB-3F79811D8353}' />
    </window>
    <window class='dashboard' name='duration per week'>
      <viewpoints>
        <viewpoint name='total completion time spend per week'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='total reacted time spend per week'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A07C002C-2EEF-46FF-BD9E-FF078EAF1214}' />
    </window>
    <window class='dashboard' name='duration per month'>
      <viewpoints>
        <viewpoint name='total completion time spend per month'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='total reacted time spend per month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0tg6ucz13x50iy1513l4a1egojmq].[:Measure Names]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{ED5FA57D-8C1E-4F77-BFD7-17E60A64DD25}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Error Rate' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 20' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 21' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 22' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 23' width='384'>
      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
      H3q9Xt6//w+9cJoYbQ6o5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='completion time per day' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='duration per day' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3xV9f348de5I3sPEgIZkIQhAUQBFUFlVEQrVsQqoNbRSh2tWtSqP7+t
      q5VatdaKUuustFWpgliWIg6mghA2ZED2Hnckd59zfn+EXAkQ1k1Y9/18PPqoOdx7zvuM+3l/
      1jlH0XVdRwghRNAxnOoAhBBCnBqSAIQQIkhJAhBCiCAlCUAIIYKUJAAhhAhSkgCEECJISQIQ
      QoggJQlACCGClCQAIYQIUpIAhBAiSEkCEEKIICUJQAghgpQkACGECFJHTQAej+eQ/2maFvCG
      6+rq+Oabbzos03W9S7fRFTZv3kxRUZH/b03TDjkeXq8XXdepqqqisbHxFEZ7eKqqdohTCCEA
      TEf6x6amJq6++upDlj/zzDOMHTv2sN9ZsWIFqqoyceLEI264sLCQ1157jUsuucS/rKioiFtv
      vRUAs9nMgAEDeOyxx8jIyDjafhyVruu8/vrrjB8/npycnGP+3sKFC+nbt6//O+vXr+ehhx7q
      8Bmz2cy7777Liy++SG5uLvfee2/A8XalBQsW8Je//AVFUUhOTmbChAnccccdhIWFnerQhBCn
      0BETQHx8PEuWLMHhcHDzzTcze/ZscnNziYiIQNd1GhsbqayspE+fPsTExOByudi8eTNer5cR
      I0YQERFBaGgoLS0t1NTUEBUVRUpKCgbD4Rseuq4TFRXFu+++i6qqvPzyyzz//PO8/PLL6LqO
      w+Fg7969pKamkpSUhKIo+Hw+6urqaGlpoXfv3oSHh6MoCpqmUV9fj8ViISsrC4/Hw8qVK+nT
      pw8JCQnExsZiMBhobm6moqKCrKwsYmJi/HE0NjbicDhQVbVDjCNHjmTJkiUUFxdz9913s3z5
      cgCioqL44x//iNFoBMBut2M2m6mtrQWgd+/e1NfXY7fb6dOnDyaTCV3Xqa2tpaGhgezsbMLD
      wztsy263YzKZqKqqIioqih49eqAoCrqu09DQQHV1NdnZ2URGRqJpGna7nejoaKxWK6GhoURE
      RABtLYAhQ4bwzDPPUFBQwAsvvIDdbue3v/0twCHnp31dcXFxKIqCqqrY7XZiYmI6PXdCiDPP
      EROAoijExsZiMpkwGAxERUURGxsLwOLFi3nxxRdJSUmhqamJ2bNnU1BQwP/+9z80TWPNmjX8
      4he/ICcnh4ceeoi4uDjq6uqYOnUqv/zlL4+4zaioKKKiohg/fjxvvPEGAPv27WPWrFkkJSVR
      UVHBQw89xLhx43jqqafIz88nNDQUp9PJ3LlzSUtL4/nnn+ezzz4jISGB4cOH09TURGlpKc89
      9xyhoaHMnTuX0tJSnnnmGTIyMqiurubFF18kJyeH1157jQ8//JCEhARqa2vJzc394YCZTMTG
      xhIdHQ3gPx4Azz77LP379+fmm2/mN7/5DfX19Xg8HiwWC3l5eVRWVmK1Wrnpppv45S9/yfz5
      83nnnXdITU3F4XAwZ84cEhMT/eu7++67aWlpwWAwUF9fz6xZs7jmmmtYunQpr7zyCr1796au
      ro5XX30VRVG49dZbueWWW5g7dy5//OMfGTNmTIe4ExMTueiii3j00Ud54IEH+PWvf83evXsP
      OT/XX389119/PS+//DKDBw/mq6++4h//+Afz5s2TBCDEWeSICaAzbrebOXPm8MQTTzB69Gje
      fvtt5s6dy9y5c6mtrcXj8TBr1iygrRY7b948wsLCWLduHXPmzOH2228/4rrXrVuHy+Xin//8
      J5deeikA8+bNY/z48dxzzz188cUXvPvuu1x66aXMnDmThIQEXC4XDz30EOvXryc7O5uVK1cy
      b948UlJSsNlsxMTEcNNNN3Hvvfdy0UUXAfDwww/z4IMPMn78eF599VU+/PBDpk+fzkcffcRr
      r73GgAED+N3vfndcx6a9j13XdW688UZ++tOf8sQTTxAWFsacOXN4//332bhxIw6Hg7lz5/L6
      66/Tt29fHnnkEZYtW8aMGTM6rOuOO+7gqquuYuHChbz33nuMHz+e119/naeeeorhw4fzzDPP
      sGDBAqZMmYLFYmHp0qW89NJLDBo0qNMYc3JyUBSFuro6MjMzD3t+Lr30Uj755BPy8vJYsWIF
      EydOxGQ6octFCHGaOqFfdENDA06nkxEjRqAoChdffDH//e9/8fl8h/3sCy+8gNvt9g9EHtyt
      ciCn08k777xDQUEBN9xwA3feeSeaplFaWkpRURElJSW0trZSXV2Nqqp8/vnnfP3114SEhFBW
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='duration per day (2)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='duration per month' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='duration per week' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3yV9d3/8dc5J3uTvQlJIIOEMAVRERCQoYBS92pvRLlta+toaR2929vR
      6q1YqxWqRWtdRZAlqwwVUFFkJkDMJHsRsteZ398f/HLViCLknJMQzuf5ePB4kCvnXNfnGrne
      1/x+dUophRBCCJej7+8ChBBC9A8JACGEcFESAEII4aIkAIQQwkVJAAghhIuSABBCCBclASCE
      EC5KAkAIIVyUBIAQQrgoCQAhhHBREgBCCOGiJACEEMJFSQAIIYSL+sEAMJlMZ/yz2Wx2T7iu
      ro7du3f3GKaUcug0HOHQoUMUFhZqP9tstjOWh9lsRilFVVUVp06d6sdqz6SUwmw2a8uz+2er
      1fqdvz9X7e3tbN261eH1CiH6zlkDoKGhgSlTppzxb9euXd/7nR07dvDvf//7BydcUFDAsmXL
      egwrLCzUpjF16lQWL15MWVnZOc7K2Sml+Nvf/tZjZ34u1q1bx2effab9/MUXX5yxPKZPn05Z
      WRnPPPMM7733nkPqdRSr1cqPf/xjdu7cCUBNTQ2zZs1ixYoVwOmAv+6668jLyzuv8TY0NPDM
      M884vF4hRN85awAMGjSIzZs3s3r1ary9vXnxxRfZvHkzl19+OUop6uvrOXLkCC0tLQB0dXVx
      6NAhDhw4QENDA11dXSilaG1tpaCggOrq6rMeaSql8PPz44MPPuCdd94hMDCQ5557Tvtde3s7
      OTk5nDx5ku5uDCwWC1VVVeTn59PR0aENt9ls1NbWkpeXh9FopK2tjY8++oji4mIaGhqwWq0o
      pWhoaCA7O1ubh+5p1dfXU1ZWph0pd7vkkkvYvHkzL730Elarlc2bN7N+/XpiY2N5+umnufvu
      uwFobW2lq6uL0tJSSktLsVqt1NTUUFBQgMVi0aZTU1PD0aNH6ezsPGN5tLa20tnZSVFREbW1
      tdq8KaU4efIk2dnZtLe3a/Pb3NyMzWajsbGRjo4OAAwGA8nJyWRnZwOQn5+Pl5cX2dnZKKUo
      Ly+ns7OThIQEbV1lZ2dTX19/xvRycnK06X17vTU3N2M0Gr9/YxJCXHDczvZLnU5HYGAgbm5u
      6PV6/Pz8CAwMBGDTpk0sXbqUiIgIGhoa+NOf/kR+fj4bN27EZrPx2WefsWjRIpKTk/nVr35F
      UFAQdXV1/OhHP2Lx4sVnnaafnx9+fn5cddVV/P3vfwfgxIkTPPTQQ4SGhlJRUcGvfvUrpk6d
      yv/+7/9y+PBhPD096ezsZPny5URHR/Pcc8+xbds2goODGTt2LA0NDZSWlvLss8/i6enJ8uXL
      KS0t5cknnyQ+Pp7q6mqWLl1KcnIyy5Yt4/333yc4OJja2lqGDh36nwXm5kZgYCD+/v4A2vIA
      +OMf/0hKSgp33HEHDz74ICdPnsRkMtHU1ERGRgaVlZU0Nzdz++23s3jxYlatWsU//vEPIiMj
      6ejo4K9//SshISHa+O677z7a2trQ6/WcPHmShx56iHnz5rFlyxZefvllYmNjqaur45VXXkGn
      0/HjH/+YO++8k+XLl/P0009zxRVXoNPpGDlyJOvXr0cpRXZ2NvPmzWPjxo2YTCaOHj3KsGHD
      8Pb2Ji8vj1//+tdERERQVlbG448/zsSJE7XpRUdH09DQwEsvvaTVqJRiz549PPfccyxbtoyY
      mJjz2f6EEP1JnYO2tjY1ffp0lZubq5RSqqurS82aNUvt3r1b2Ww2tWLFCnXvvfcqpZT6y1/+
      op577jntuy0tLaq+vl61tbWp7du3q/nz56uuri716aefqptvvrnHdPLy8tTkyZPVtm3b1IYN
      G9SPfvQj9dJLLymllPrDH/6gXnrpJWWz2dT27dvVnXfeqSwWi6qoqFAdHR2qoaFBLVy4UK1a
      tUodPHhQXX311aq6ulrZbDbV1NSkbDabuvXWW9Xnn3+uTe/mm29W27dvVzabTb388svqySef
      VMXFxWrq1Knq+PHjymazqccee0z94x//OGOZ5Ofnq/Hjx/cY9uijj6o333xTKaXUwoUL1Xvv
      vaesVqt6/PHH1VNPPaVMJpP65z//qe6//37V3t6upkyZogoKCpTValW/+tWv1Ntvv91jfLfd
      dpv68MMPlc1mU2vWrFELFixQra2tat68eeqrr75SSin1xBNPqJdffllVVVWpSy65RN12221q
      //79qrOzUxtPYWGhmjp1qmpoaFCLFi1Sx44dU3fddZfKy8tTTzzxhHrllVeUUkr99re/Va+9
      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
      8sDwt2gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='reaction time per day' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='total completion time spend per month' width='384'>
      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
      B6NRS5nZn73FAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='total completion time spend per week' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3de3QWZX4H8O/MvPc39/s94RIIJAQwBIQI6Ioox4UqKiL1RrXW2u62Z7un
      3bM97e45Pd2u3dOe9qxtt0d0vQCCFRQvizfkJoiiXMM1BAKBhNyTN3nvc+kfmNEIat68EzLJ
      fD/ntGeZd5z8nncu33memXdG0DRNAxERWY440gUQEdHIYAAQEVkUA4CIyKIYAEREFsUAICKy
      qFEfAIqijHQJRESj0qgPAFVVR7oEIqJRadQHABERDQ0DgIjIohgAREQWxQAgIrIoBgARkUUx
      AIiILIoBQERkUQwAIiKLYgAQEVkUA4CIyKJsI13At4lGo2hubobNZkNOTg5EkVlFRGQkUwaA
      3+/HmjVrUFxcjHA4jL6+PjzyyCOw2UxZLhHRqGTK0+r6+npMmjQJd911F1asWAFBENDd3T3S
      ZRERjSmmPKUuKirCvn37UF9fj1AoBFVVkZSUBODK45+//ghoVVX5RFAioiEwZQB4vV54PB7s
      2LEDsiyjoKBAH/4RBAGSJA2Yn9cHiIhiZ8oA+Pzzz1FYWIgFCxZAVVVs2rQJ58+fx7hx4646
      2Kuq+q3XBrat+/B6lDtoZXOmIH9i/kiXQUQEwKQBEA6H9f8tCAJUVUU0Go15OTs2fmRkWXFL
      ykhiABCRaZgyAObMmYP169ejvr4eiqIgNTUV48aNG+myiIjGFFMGgNvtxp/8yZ8gEAhAkiS4
      XK6RLomIaMwxZQAAV4Z+vF7vSJdBRDRm8fYZIiKLYgAQEVkUA4CIyKIYAEREFsUAICKyKAYA
      EZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFA
      RGRRDAAiIotiABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQ
      EVkUA4CIyKIYAEREFsUAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii7KNdAHX0tfXh76+vgHT
      UlNT4XQ6R6giIqKxx5QB0NTUhNraWgCApmk4cOAA/vRP/xQlJSUjWxgR0RhiygCYNGkSJk2a
      BABob29He3s7CgoKRrgqIqKxxZQB8HW7d+/G3LlzYbNdKVWWZaiqqn+uqioURRmp8mIiR2WE
      QqGRLoMsRJUVyP7ISJcxgD3RBUEURroMgskDoLe3F5cuXcIPf/hDfZooihCEgRuPJEnXu7Qh
      kSQJdrt9pMsgC/G3+3Fp16mRLmOAcUtnwu7kfmAGpg0ATdOwfft21NTUDDhoiuLAG5dUVR01
      ASCIwqiplcaGb+4vZiCJIvcDkzDf1vEln8+HCxcuoKKiYqRLISIak0zbAzhx4gTmzJmjj/0T
      kTU17zmDUKd/pMvQ5c6bAFd6wkiXYQjTHl1vvPHGkS6BiExAU1Rosvr9M14nmjbSFRjHtENA
      REQ0vBgAREQWZdohICIzaN9/AdE+89xH78lPRvKkzJEug8YIBgDRd1AiCtSwPNJl6DR5dPzo
      kUYHDgEREVkUewBERMMoeMmHaI95HgEjeezwlqQCYAAQEQ2raG8Y4Tbz/I7BluTUA4BDQERE
      FsUeAA0bJSSbqusLAM5ML59ESfQlBoCJRbtDiHSZ5wBqT3bCkeYe9PyKP4JgQ88wVhQ7Z4YH
      AAOACGAAmJoSiCLSFhjpMnSiTQRiCAAiMjdeAyAisigGABGRRTEAiIgsigFARGRRDAAiIoti
      ABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkUA4CIyKIY
      AEREFsUAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOAiMiibCNdwLfRNA2yLCMa
      jcLhcECSJAiCMNJlERGNGaYNgHPnzmHHjh0AAJfLhfvuuw92u31kiyIiGkNMGQCyLOOdd97B
      ypUrkZ6ejmAwCJvNlKUSEY1apjyq1tfXY8KECXC73eju7kZycrI+/KOqKjRN0+ftHyoaDVRV
      jalWVdW+f6brSNViq19R1GGsZmhkRYGgxVCXZrJ1oMa2vZtxHSiqAiGGNphsFUBVlZjWgRbL
      9nY9fO2YacoA6OzsxMGDB9He3g5VVaGqKh588EE4HA5omgZFUfR5+z8fDVQl1gBQvn+m6yj2
      ADNX/QCgyDIgDv5aktkOPlqMIWzGdSDLChDTAdRcK0FRYgwAk53IaYC5A8But2PhwoW46aab
      oGka3nrrLZw8eRKVlZWQJAmSJOnzRqPRUXNtwGa3weVyDXr+kC2K6DDWEyubFFv9EbuKyDDW
      MxROpxOCNPib34QYwuJ6kCQppnUg24PDWM3QOB0O2F3OQc8vmmwd2O2O2PaDrx2vzEAQBL1+
      U94Gmp+fj7q6Oj35k5KSBpz1ExFR/EwZALm5ufB4PNi0aRN27dqFY8eOYfLkySNdFhHRmGLK
      ISAAWL58ORoaGuD3+/HQQw/B7XaPdElERGOKaQPAbrejtLR0pMsgIhqzTDkEREREw48BQERk
      UQwAIiKLYgAQEVkUA4CIyKIYAEREFsUAICKyKEN+B3DhwgX89re/hd/v16dNmzYNf/ZnfwZR
      ZMYQEZmRIQHw4YcfIiMjA6tXr9anJSYm8g1eREQmZkgAFBUVQdM0TJkyhQd9IqJRwpAASEtL
      w5o1axAMfvXo2ZKSEtx5550MBCIikzIkANLT07FixYoB09LS0oxYNBERDZO4AkCWZSiKgsLC
      QhQUFAz4jGf+RETmFlcA7N27FwcPHsT06dPxu9/9bsBnN9xwA376058yCIiITCquAJg5cyYm
      T56M5ORklJeXD/jM4XDw4E9EZGJxBYDX69XfLZmSkjLgMx78iYjMLa4AOHXqFJ566ikkJydf
      9dmsWbPw85//nEFARGRScfcACgsLkZubi5qaGlRXV8Pj8VxZsM3Ggz8RkYnFFQCFhYVYs2YN
      zp07h08++QRPP/000tPTMXv2bFRVVelhQERE5hNXAAiCAIfDgcmTJ2Py5MmQZRmffPIJnn32
      WWzbtg2//vWv2QsgIjKpuAJA0zQEAgG9B3D48GF4vV4sX74cNTU1PPgTEZlYXAFw4cIF/OIX
      v0B+fj7mzZuHpUuXIj09HQDvAiIiMru4AiAUCqGlpQV+vx91dXV48cUX9c9uuOEG/O3f/i2D
      gIjIpOIKgIkTJ+K1116DpmlXL5h3ARERmVpcASBJErxer1G1EBHRdcTXdRERWZQhj4NWFAUN
      DQ3o6+vTpyUlJaGkpITDQEREJmVIAHzwwQf4n//5H4wbN06fNnXqVDz++OMMACIikzIkAC5f
      voxVq1ZhxYoVPOATEY0ShlwDqK6uxunTp9He3o62tja0tbWhp6fnmncHERGRORjSA2htbcW+
      fftw/PhxfdrMmTP5QhgiIhMzJABuvvlmLFiwYMA0QRB48CciMrG4fwnc2Nh4zaEer9eLvLy8
      eBZPRETDKK4AaGpqwj/90z9BUZSrPps5cyZ+8pOfsBdARGRScQXA+PHj8dJLLxlVywB9fX2I
      RqMArgwnJScnM0yIiAxkyDWA4fDiiy8iJSUFoihCkiTcfffdsNvtI10WEdGYYcoA0DQNiqJg
      1apVPOsnIhomhgSApmloamrCJ598gry8PGRlZUHTNJSWlg5peT6fDwDQ2NiIxMREJCYmwma7
      UqqiKAOuOaiqClVV42/EdSDLMsLh8ODnv8a1lZEkK0ps9UflYaxmaMLhCARp8CcVZvstixLj
      OugfRjWTSDQCdfBNgGqydRCNRiHGsA5Uk+3Hmqbp25AhAVBbW4v//M//xNSpU9HY2Igf/vCH
      WL9+Pf7hH/4Bohj7b80kScKECRNw6NAhtLa2wuVyYeXKlfojpr+5zKH8jZEgCleGswZLNlnv
      RxSEmOpXTbheJEmEIA2+LnOtAUCIcRsy474hilJMbTDbOugflh4sM45i9NdvSADs2rULjz76
      KIqKirBlyxYkJyeju7sbqqoOaQNMSEjAnXfeCeDKGc+6detw+fJlFBQUQBTFAcuMRqN678Ds
      REmMqVbZZDuvKMZWvxrDgfZ6sdlsMQUATLbziqIQ0zqI5UB1vdgkKaY2mO0AKsVav8n2Y0H4
      ahsy5Mg5btw47NmzB06nE4FAAB988AGSkpKGfPbR2toKp9OJ5ORkvbvicDiMKJWIiL5kSAAs
      WrQI7e3teOaZZ9DZ2Yny8nL86Ec/GnIARCIRvPbaa3A4HAiHwyguLkZGRoYRpRIR0ZcMCQCH
      w4GHH34YDz/8sBGLQ0FBAf78z/8cgUAANpsNTqfTkOUSEdFXDAmA06dP41//9V/h9/v1af0P
      gxtqL0AQBL5ukohoGBl2EXj69Om499579WlOp9N0F2+IiOgrhgRAWVkZjh07hpycHB70iYhG
      CUMCICMjA++88w7279+vT6usrMRf/uVfmvI+ZCIiMigA9uzZg1tvvRVLly7Vp3k8HvYGiIhM
      zJAAmDx5Mo4ePYqSkhIjFkdERNeBIQEQjUbx+uuvDxgCmj59On70ox+xF0BEZFKGBEB1dTXW
      rFkzYJrb7ebBn4jIxOIKgJ6eHvj9fiQnJ191sZcHfyIic4srAA4fPowDBw7ghhtuwP/+7/8O
      +IyvhCQiMre4AqCmpgZz5syB0+nEggULjKqJiIiug7hu0q+vr8evfvUro2ohIqLrKK4egCzL
      8Pl8kOWr3/zU/+IWDgEREZlT3HcBHTp0CCtXrrxqelVVFf7u7/6OAUBEZFJxB8CUKVPw93//
      91dNd7lcPPgTEZlYXAHQ/8jm/Px8o+ohIqLrJK6LwBMmTMDPfvYzo2ohIqLrKK4AcDgcSE9P
      N6oWIiK6jvisZiIiizLkWUDnz5/Hf/zHf6Cnp0ef1v8wOL4PgIjInAwJgA8//BD5+fn48Y9/
      rE/j+wCIiMzNkAAoLi6GpmkoKSnhQZ+IaJQwJABSU1Px7LPPwu/36wFQUlKCpUuXMhCIiEzK
      kADIzMzEqlWrBkzLysoyYtFERDRMDAmAoqIipKeno7a2FsFgEGVlZcjOzubZPxGRiRkSAK2t
      rfjHf/xHeL1eeDwerFmzBk888QTmz5/PECAiMilDAuCdd97B3Llz8dBDD0EQBJw+fRq//e1v
      MXfuXNjtdiP+BBERGcyQm/RVVYUkSRAEAYIgwGazQdM0IxZNRETDxJAewJ133omf//znOHbs
      GLxeL44fP47HH38cNpshiyciomFgyBE6JycHzzzzDD777DOEw2GsXr2aTwglIjK5uAKgra0N
      XV1dyMzMxKVLl5CRkQEA6OrqQjQaRXFxMS8CExGZVFwBUF9fj6NHj2LatGlYu3btgM8qKirw
      xBNPMACIiEwqrgCYPXs2Zs+erf/v/ge/aZoGVVV58CciMrG47gISRRGiKOKjjz7C22+/rU9v
      a2vDr371KyiKEneBREQ0POLqAWiahs7OTrS0tCAQCKC1tRUAUFtbi8uXLxtSIBERDY+47wJ6
      +umncezYMaiqiu3btwMAkpOT8dhjj8V9G6imaaitrUVGRgZyc3PjLZWIiL7GkAD47LPPEAqF
      sGDBAn26EeP/dXV1ePvtt1FVVcUAICIyWFwB0H+Qr66uxqlTp/Dss89i/PjxyM/PRzQaRWVl
      5ZCX3dfXh48++gi333472tvb4ymTiIiuwZAfgh04cADPPfccqqurUVtbi/Hjx+OVV15BRUXF
      kF8JuWPHDsyZMwdut3vAdFmWIcuy/m9N0xCNRuOq/3qJRCIIBAKDnl82WbuichRaDPUr4cgw
      VjM0gUAQgjT43qmmqsNYTezkqBzTNhQOh4exmqEJhoKICoO/QUQx2ToIh0PQAoM/rilfO16Z
      gaqq+jZkSADs27cPDz/8MPLz87FlyxZ4vV74fD4oijKkAGhoaEBnZyfuuOMO1NXVQVVVqKoK
      URQhSRIkSdLnlWV51DxywmF3XBVo3yVkV6AgNIwVxcZms8dUfyQAyPAPY0Wxc7tdEKTBb5O9
      Jnuntc1mi2kdKA7zbD/9XC4X7G7noOeXRBFmOhVyOp1wxbAOZFsfzBQBoijq25AhR86ysjJs
      3boVt912G3w+HzZv3ozMzMwBB+pYfPrppwgEAnjllVfQ3d2Nvr4+pKamYs6cOde8tjBqfm8g
      xFar2VolIMb6zdYAQH9g4agV6zZkwrYKGOXrIOb6zdfW/voNCYCbb74ZgUAAGzZsQHd3N6ZN
      m4Ynn3xyyMM/y5cvh/plt6+urg4XLlxAVVWVEaUSEdGXDAkAm82GZcuWYdmyZUYsbsA7BFJS
      UhCNRkfNMA8R0WgR11H19ddf1+/9/6aKigo8/vjjQ+4F9CsoKEBBQUFcyyAioqvFFQBz5szB
      +PHjr/lZUlLSKB/nIyIa2+IKgLy8POTl5UHTNPT29uLkyZMIhUIoLy9HWloaA4CIyMQMucft
      7NmzeOKJJ7Bx40b84Q9/wFNPPYXPPvuMr4UkIjIxQ66s7ty5E4sXL8bq1asBAPv378drr72G
      WbNmDflWUCIiGl6G9ABKS0v1O3cEQUBhYeGAO3mIiMh8DOkBRKNRvPzyy3j//fcBXPn5eVdX
      Fx599FHMnTsXTz31lBF/hoiIDGRIAMyZMwe///3vr/lZLD9bJyKi68eQAHA6nWhpaUFvb68+
      LS0tDRUVFbwTiIjIpAwJgLfeegvr16/H1KlT9WmTJk1CeXk5A4CIyKQMCYBAIIB7770X999/
      vxGLIyKi68CQALjpppvwu9/9DsXFxfq0lJQUTJ48mT0AIiKTMiQAjh49ijNnzuDNN9/Up5WV
      lWHSpEkMACIikzIkAHp6enDPPffg/vvv5wGfiGiUMCQAysvLsW7dugEPhktJSUFpaSkDgYjI
      pAwJAFmWIQgCNm/erE8rKyvDxIkTGQBERCZlSADMmjULs2bNgs/nQyQSQVpaWtzvASAiouFl
      SACEQiE8++yz2LFjBwRBQH5+Pv7mb/4GhYWF7AEQEZmUIafp7733Htrb2/Hiiy9i48aNWLx4
      MZ555hn9vb5ERGQ+hgTAxYsXMXfuXHi9XkiShOrqavT29kJRFCMWT0REw8CQIaD58+fjN7/5
      DaLRKBISEvDuu+9i5syZfCQ0EZGJGRIAFRUV+NnPfoYtW7YgFAph4cKFuPXWWzn+T0RkYnEF
      QDgcxuHDhzFr1iyUl5ejvLwcAHDhwgVcvHgREyZMMKRIIiIyXlzXAM6cOYOXX375qjP9rq4u
      /Pd//zcvAhMRmVhcAdDT04Pk5OSrAiA5ORl+v58BQERkYnEFwPjx43HixAkcPHgQmqYBuPKb
      gJdffhlTpkzhC+GJiEwsrmsA2dnZ+OlPf4p//ud/hsvlQkJCAlpaWlBeXo7Vq1fzIjARkYnF
      FQCCIODGG2/Ec889h/PnzyMUCiEjIwPFxcU8+yciMrm4bwMVBAHJycmorKw0oh4iIrpO+MQ2
      IiKLiqsH0NfXh2AweM3PHA4HkpKSeB2AiMik4gqAN998E1u3br3mZzNnzsRf//VfMwCIiEwq
      rgC49957cdddd13zM0mSePAnIjKxuALA4XDA4XBAURQcOXIE9fX1+o+/8vLyUFNTY0iRRERk
      PEMeBvfFF1/gmWeeQXp6OhITExEIBDBp0iQGABGRiRkSACdPnsQDDzwAVVWRkpKC4uJiPP/8
      81BVlb8HICIyKUMCIC0tDW1tbaioqMCuXbuQnJyM5ubmIQdAMBjE7t270djYCLvdjurqapSV
      lfGaAhGRgQz5HUBNTQ1KSkr0x0H/27/9G+6++27YbEPLl97eXmRmZmLlypVYsmQJtm7dit7e
      XiNKJSKiLxnSA9A0DVOmTIHT6cRf/dVfIRgMor29fcjLy8rKQlZWFgDAbrfD6XTqZ//9D537
      5t8fLWKp1Yytium7NmEDNK3//41eo2l7/zajvQ1jpX5DAmDPnj3o6+vDAw88AEEQ4PP58Jvf
      /Ab//u//PuTXQp47dw6HDh1CQ0MDampqkJCQAACQZXnAu4Y1TUMkEjGiGcMuEokgEAgMen4l
      Gh3GamIXjUahxlC/asL1EgwGAHHwQ4mayR5pHo3KMW1DoVB4GKsZmmAwCAnyoOdXTLYOwqEQ
      1MDgtyFZHnxbrwdVVfVtKK4A0DQNW7duxb59+wYchM+cOYOEhIS4LgCnpKSgtLQUdrsdx48f
      x/Tp0+F0OmG32weESjQaHTXvHnY4HPB6vYOeP9SjIojQMFYUG7vdDncM9UdCAmQM/mB1PXg8
      HgjS4Ec++0RzPS3FbrfFtA1pLvOFsNvtht3rHPT8PaIIM50KOV2umPYDxRaA8v2zXTeiKOrb
      UNw9gGAwiEgkgkgkAr/fDwCYMmVK3O8ETk1NRWpqKsrLy/HOO++gvr4eU6dOjbdcIiL6UtyP
      g77nnntQXV0NWZYxfvx4Q4rav38/wuEwSkpKEAqFUF9fj+rqakOWTUREVxjSv83JycHevXvx
      wAMP4L777sMvf/lLtLS0DHl5FRUVEEUR+/fvx+nTp7F8+XL9ojARERnDkIvA27dvx+HDh/Ev
      //IvcLlc2LZtG/7rv/4Lv/jFL4Z0HcDtdmPevHlGlEZERN/CkB5AXV0dFi1ahOLiYuTk5GDx
      4sVoa2sbcLcOERGZiyE9gFmzZmHNmjVISEiAx+PBu+++i9LS0iH/EIyIiIafIUfo2bNnQ1VV
      bN68GeFwGLNnz8Y999wD0WS30BER0VfiCoDW1lZ88cUXWLJkCebNm8dxeyKiUSSuU/T29nZ8
      8MEHRtVCRETXUdxDQI2NjXjuueeuml5YWIjbbruNT/AkIjKpuANA0zREr/HMGrM9/4KIiAaK
      OwCKiorw5JNPGlELERFdR3FdA8jIyMCtt95qVC1ERHQdxRUAWVlZuPPOO42qhYiIriPeqE9E
      ZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIotiABAR
      WRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkUA4CIyKIYAERE
      FsUAICKyKAYAEZFFMQCIiCzKNtIFXIuiKDh06BCOHz+OYDCIyspKzJ49G6LIvCIiMoopA6C5
      uRmXLl3CkiVLIAgCXn31VUyYMAGZmZkjXRoR0ZhhygDIzc3F0qVLIQgC2traEIlE4HK5AFzp
      Haiqqs/7zX+bmSLLCIfDg55fVpRhrCZ2iqLEVL8SlYexmqGJRCKAKAx6fk3ThrGa2CmKGtM6
      iEajw1jN0ESiEaiDbwJUk60DWY7GtA5Uk+3Hmqbp9ZsyACRJgqqqOHToEHbv3o1ly5YhISEB
      ACAIAgThqx1YEIRRMzQkCGJMtX69nWYQ63etxnCgvV5EUYwpAMzWAkFATOvAjPuGKMa4Hwxj
      LUMx2vdj4KvtwpQBoGkatm/fjoaGBqxevRqJiYn6Z9/ceDRNg91uH4kyYyZKYky1KibbeUUx
      tvo1yXxnnzabDYIUw/dqsp031nUgSdIwVjM0NskWUxvMdgCVJCm2+k22HwuCoNdvrsq+1NHR
      gdraWjz44IMDDv5ERGQcU/YAzp8/j66uLjz//PP6tKVLl6KgoGAEqyIiGltMGQBVVVWoqqoa
      6TKIiMY0Uw4BERHR8GMAEBFZFAOAiMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAi
      IotiABARWRQDgIjIohgAREQWxQAgIrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkUA4CI
      yKIYAEREFsUAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOAiMiiGABERBbFACAi
      sigGABGRRTEAiIgsigFARGRRDAAiIotiABARWRQDgIjIokwbAJqmob29HQ0NDSNdChHRmGQb
      6QKuRVEUvPXWW6ivr0deXh5KSkpGuiQiojHHlD0ARVEwfvx4PPDAA5AkaaTLISIak0zZA3A4
      HKisrERLS8tVn8myDFmW9X9rmoZoNHo9yxuyaCSCQCAw6Pllk7UrKkehxVC/Eo4MYzVDEwwG
      AVEY9Pyaqg5jNbGTZTmmbSgcDg9jNUMTDIUQFZRBz6+YbB2Ew2FogcGfOytfO16Zgaqq+jZk
      ygD4LpIkDegVyLIMm210NMNud8Dtdg96/pBdgYLQMFYUG5vNFlP9kQAgwz+MFcXO5XJBkAa/
      8/aK5uokS1Js60BxmGf76edyOWF3Owc9vySKMNOpkNPpgCuGdSBLfTBTBIiiqG9Do+PI+TWC
      cPXZ27WmmZIQW61ma5UAIbb6zdYAXPn+R832cg1CrNuQCdsa63ZkPjHWb8K29tdvrtObLymK
      gmAwiHA4DFmWEQwGBwz7EBFR/EzZA7h8+TJ27NihB8GmTZtQXV2NyZMnj3RpRERjhikDID8/
      H3/8x3880mUQEY1pphwCIiKi4ccAICKyKAYAEZFFMQCIiCyKAUBEZFEMACIii2IAEBFZFAOA
      iMiiGABERBbFACAisigGABGRRTEAiIgsigFARGRRDAAiIotiABARWRQDgIjIohgAREQWxQAg
      IrIoBgARkUUxAIiILIoBQERkUQwAIiKLYgAQEVkUA4CIyKIYAEREFsUAICKyKAYAEZFFmTYA
      NE1DIBBAKBSCpmkjXQ4R0ZhjG+kCvs3u3btx6tQpaJqGuXPnoqKiAoIgjHRZRERjhikDoLu7
      G0ePHsVjjz2GUCiEl19+GZMmTYLT6Rzp0oiIxgxTDgHV1dWhsrISLpcLKSkpyMrKQkdHx0iX
      RUQ0ppgyAHp7e5GcnKz/Ozk5GT6fbwQrIiIae0wZAC6XC6FQSP93KBSC2+0ewYqIiMYeUwZA
      fn4+zpw5A03TIMsympubkZ6ePtJlERGNKaa8CFxUVISPPvoIb775JgKBAAoKCuD1eke6LCKi
      McWUASAIAlatWoVz587B4XCgqKiIt4ASERnMlAEAAE6nE2VlZSNdBhHRmGXKa+QklegAABHV
      SURBVABERDT8BG2UPWchGo1CluVBzaup5mqaIHIYa1Qy02Y0lE3ITPUDo78NY2g3HnUB8E2y
      LMNmM+1I1vdSFAWapo3aNqiqCkVRYLfbR7qUIYtEIrDb7aP2OpOqqpBlGQ6HY6RLGbJoNApJ
      kiCKo3NQQpZlCIIASZJGupSYjM5v+2tGeX5B07RR3YbRXj8wdtowmqmqOtIlxEVV1VG5DkZ9
      ABAR0dAwAIiILGrUXwNQVXXUjhsCXw0/jNY2jPb6gSvbkCAIo/YaANfByBut9Y/6ACAioqEZ
      vacMMYhGo2hpaUF3d3fcF2o0TcPp06ehKIpB1X07VVXR09Nz1W2vwWAQfr8/rmUPdzuCwSB6
      enoG/F8wGDT0byiKgrq6OkMvIPa/ie7rf6Ovr0/fblRVHXQ7enp60NTUZFhtg+X3+6/67sPh
      MM6dO4dwODxsf7ehocHwdXwtoVBIb5fP57vmPh0Kha5ZS1tbG9rb24e9RuDKttLZ2Ym2trZB
      37oej6G0bXTeexiDjo4ObNiwAZmZmejt7UVqairuuuuuuLrLO3fuRElJybDf8hUIBPDrX/8a
      y5Ytw9y5cwFc2aheeeUVBINB/MVf/MWQl61pGnbt2jVs7Th+/DhOnDiBrq4uqKqK9PR0TJw4
      ETfeeKNhf0OWZXz88ccYN26cYcMf0WgU69evxyOPPAK73Y6TJ0/ijTfewI9//GMkJiaiqakJ
      Bw4cwLJly753Wc3Nzbh06RLy8vIMqW2wPv30UzQ1NaGlpQUJCQnwer2oqqrCkSNHsGjRomF7
      sdLnn3+O+fPnD/uTe7dt24bm5mZ4PB44HA4sX778qqGXkydPAgBmzJgxYPrZs2chSRIyMjKG
      tUZZlvHaa68hGo1CFEV0dnbiscceg8fjueb8n3/+OaZNmxbXuhlK28Z8AOzbtw8LFy5ERUUF
      NE1Db28vBEFAT08PEhMTIYqifqbgcrng8/kgSRJaW1vh9XqRnZ0N4MqZ4OXLlyHLsp7mmqah
      o6MDPp8PSUlJyMjIQCAQgKZp+sPr/H4/JEmCy+WKuXZN05CXl4cTJ07oAdDR0QGHw4G+vj59
      ns7OTnR2diIrKwtJSUkQBAFdXV2w2+1oaWnRaxMEQX+6av+948BXZyo+nw8pKSlISUlBd3c3
      UlJSIIoiVFXV2zjYA21VVRWqqqrwxRdfIBQKoaamBgAQDoehKAo8Ho++3JSUFGiahtbWVvh8
      PuTn58Pj8UDTNPT09KCzsxPJyclIS0uDIAiIRqO4fPkyIpGI3oORZRmtra0Ih8PIysqC1+tF
      b28v7Ha7/t37fD643e7v/M2CzWaDKIro6elBRkYGTpw4gcLCQrS0tCAxMRH19fXIz88HcOUs
      8+LFi/B4PMjNzdUPQj6fDx0dHfpLjDRNg8/ng81mQ0tLCzweD7KzsyEIgr4Mr9eLnJwcvX3N
      zc0AgJycnJjv7//BD34AANi6dSsmTpyI0tJSAMCRI0cQiURw/vx5iKKI/Px8iKKI7u5uJCcn
      QxAE+P1+2Gw22Gw2+P1+eDwetLa2Ijs7G5FIBC0tLXA4HMjOzoYkSdA0DS0tLQgGg/oj3Pvb
      29nZCZfLhZycHEQiEYTDYSQlJenbQTQaRUJCQkxt6/9vFy9ejKKiIn1aV1cXUlJS0N7eDo/H
      g8mTJ+uf9W9HXV1d6OnpQVpaGoArvdTW1lYIgoDc3FxIkoTu7m6kpqZCEARomoauri59/li0
      tbUhGo3iwQcfhCAI6Ovrg8PhgKZpaGtrQ19fH1JSUpCWlgafz4fPP/8cqamp8Hq9yMzMRF9f
      n358CoVCUFUVbrcbPp8PiYmJ6OjogMfjgcfjiatt0i9/+ctfxty6UaSrqwu1tbUoKiqC0+mE
      y+WCIAjYvHkzJk6cCLvdjiNHjqC9vR1ZWVl44YUXcPLkSYTDYXz44YcoKyuDy+XC+vXr0dTU
      BJ/Ph4aGBsybNw/Nzc3YsWMHQqEQ9u7dC5fLBUVR8OGHH6KiogIA8PrrryMzM1Pf8GMRiURQ
      X18Pu92O/Px8uN1uHDx4ELm5uWhsbMScOXNw/PhxvPfeewCu9Ezy8vKQlJSEZ555BhcuXEAw
      GMS2bdswdepUiKKIdevWoaOjA11dXbh48SJuvPFGXLx4UW/Hzp07kZaWhh07diAjIwNJSUno
      7u7GW2+9hcrKypgvcjU3N0OWZX1nraurw7lz51BUVIRIJILNmzdj+vTpOHToEPbs2QMA2LFj
      B8rKytDW1ob/+7//g6qqOHTokP5QwJdeegk9PT3o6OhAW1sbqqursW/fPpw+fRrd3d14//33
      MX36dJw5cwZHjhzBxIkT9Z7T5MmTv/MsSxAEtLW1QVVVZGZmYs+ePViwYAHOnj2LCRMm4KOP
      PsJNN90EURTx0ksvAQCOHTuGYDCoP8b8jTfegKZpOHv2LFJSUlBSUoKXXnoJtbW1iEQi2LZt
      G0pLS2Gz2fRlHD16FOFwGDk5Odi0aROamprQ3t6OpqYmjB8/PuZtBwDOnDmDtLQ0/VHqhw8f
      xsGDBxGJRLBv3z4kJCQgKysL69evx4wZMyAIAvbt26f/uHLr1q04fPgwLly4gHHjxmH9+vXw
      +/04f/68Xusf/vAHHDt2DOFwGHV1dZgxYwYURcHbb7+NYDCIQ4cOwefzIT09HRs2bMANN9wA
      ANi1axeCwSBycnJibteJEyeQl5c34KVR69atQ3d3N/bu3YuioiI0NDSgtbUVeXl5OHLkCN57
      7z2oqoq6ujoUFBQgLy8Pb7zxBrq7u9HY2IiDBw+irKwMGzduxLhx4+B2u9HY2IiPP/4YU6dO
      jbnG/h52Xl4eEhMT4XQ6IUkSzp49iz179iAYDGLXrl1ISUlBV1cXDhw4AFVV0dbWhpKSErz9
      9tsoKSmB0+nEsWPH0NzcjLy8PLz++utoamrC3r17UVhYiIaGhrjaNuZ7ANXV1dA0DevWrUNC
      QgIWL16MvLw8RCIRfR5FUfQDm8fjwf3336+fKfaPqyUmJuKuu+6Cpmm4ePEiAKCwsBB33303
      fD4fMjIyUFtbi3vvvVc/a3U4HOjs7Ix7CGDmzJk4dOgQbrnlFpw9exZ33XWXfrD85JNPcN99
      9yE1NRVTp07F7t278cADD8Dj8eDhhx/Wz/p7enpw7tw55Obm4vbbb4eqqvr4dElJCbKzs+Hz
      +eD1etHQ0IBZs2Zhz549WLFiBQ4fPoyysjJDhln6fzncLxKJQFVV7N27F0888QTsdjskScKp
      U6dgs9mQk5ODBQsW6D2qvXv3oqysDPPnz0c4HMb69esBADU1Nejr64Pf70dnZyfOnz+P8vJy
      bN++HQsXLkRfXx9sNtugHis+ceJEHD58GLm5uUhLS0NOTg727duHYDAIVVWRkJCAw4cPY9Kk
      SVi4cCECgQA2bNiAGTNmYPfu3bj//vuRnp6OkydP4tKlSwCu9C7vvfdeeL1eeDwetLS04MKF
      C5gyZQrmz58Pv9+PjRs3Ytq0aeju7saSJUuQn59v6PCczWbDihUrkJmZiZMnT+LixYsoLy8f
      sC/Isqz/Ov3o0aN48MEHMXXqVPj9foTDYdTU1Og9sZaWFrS1teHRRx8FAP2tfcnJyVixYgW6
      u7vR09OD999/HwsXLkRiYiLOnj2L4uJinDlzBqtWrRpyW7Zv347k5GQkJCRg0aJF6OjoQGFh
      IR577DFIkoSmpib92tDu3buxevVqeL3eAaFxzz33oLu7G4FAAG+88QYikQjKy8tx4MABLFq0
      CJ999pkeWLFKTEzEfffdh23btiEUCmH27NmYNWsWJkyYgLy8PPh8PiQkJODEiRNYtmwZPv/8
      cyxevFjvEUUiEf3ahqIoem+9f2TiySefhCAI2LJlS1xtG/MBIIoibrzxRsyaNQv19fV4/fXX
      8cQTT3zn/P1h0L/zXb58+ZpnYefPn8e7776LoqIifWjIZrNhxowZOHToEFJTU1FWVhb3rWET
      J07Evn370N3dDVEUkZiYqH8WDof1Fd9/nePb2tHa2nrNdtTV1WH79u0oKirSu6alpaXYtm0b
      enp6cOrUKTz44INxteG7RCIRdHd345VXXgFwpfs6Y8YMlJeXo7W1FWvXroXX68Xy5cvR0tKC
      2bNn6/9tf3d2+/btuHTpErKzs9HX1wdFUWCz2VBWVoYTJ07A5/Nh2rRpgwqx7OxstLS04OLF
      iygsLERCQgJCoRDa2tr0YbGuri4cPXoU58+fh6ZpUBQFoVAIgiBcs7f39VsE+9dHV1cXjh07
      hnPnzunLEEURixYtwu7du9Hd3Y358+ejsrLSiK8ZAPT2DyZYpk6diilTpgAA3G43brrpJrz1
      1lsIh8NYsmQJQqHQNU9uOjs78dprryEvLw9OpxPRaBQAMG/ePOzduxdutxtJSUlxveNj2rRp
      yMnJ0R+h0h8E32xX/3f6zb8lyzI2bNgAj8eDhIQE/YBbWVmJ5557DnPnztXPxodCEAQUFxdj
      9erV6OjowMaNG5Gbm6v3yIuKihAIBGI+NqSkpODWW2+FIAiGtG3MB0BraytSUlLgcDhQUlIC
      QRCgqqp+JqppGoLB4LdenAGA1NRUXLx4EdOmTYOiKPoZ7P79+3H77bejpKQEly5dwo4dOwAA
      06dPx5o1a5CYmDioi4Xfx+FwIDU1Fe+++y6qqqoGbDT9Y7Q5OTlobGz8zvHKlJQUNDY2orS0
      dMCZ+IEDB7BkyRIUFBSgrq4OjY2NkCQJVVVVePPNN5GRkWHYC3kEQdDPOMPhMFRVhdPpREpK
      CpYvX46EhAREo1FEo1Goqoqbb74Zt956K3bu3InDhw8jNTUVjY2NyM/P19eFLMuoq6vDI488
      AofDgXfffVf/e7Nnz8amTZugqioeeuihQdXo9XohSRJqa2tx++23QxAElJSUYPv27fowWEZG
      BiZPnow77rgDANDX1wen06nfNZSamjrgzPpaMjMzMWXKFCxevFhfhs1mQ25uLlatWoVgMIhn
      n30WlZWV8Pv9cDgc+ti82+02rHegKIp+H/vXX8Vqs9n0bU1VVZSVlWHmzJlobGzEzp07ccst
      t6C1tVU/U+1v74kTJzBt2jTMnTsXfr8fp0+fBgAUFBQgEAhg27ZtqKmpievEKCMjY0D4iKJ4
      ze9DkiREo1EEAgG43W5EIhG43W60tLRAkiQsX74c0WgUFy5cAHBl3U+YMAFbtmxBaWnpkHu9
      /SchSUlJSE9PR35+Pnp7e/HZZ5/h7rvvRlZWFurq6nD06FEAV77rUCik9wD6j1H9x6f+70oU
      xQEhHm/bxnwAnDlzBp9++ilSU1PR29uLGTNmwOFwICcnBy+//DJcLhc6Oztx8803X/O/FwQB
      U6ZMwccff4yXXnoJsiyjs7MTADBhwgRs3rwZWVlZCIfD+tiy2+3GuHHj0NzcjJSUlLjq7z9z
      LC8vx9q1a7FixQp9OgDMnz8fr776KnJycnD58mWsXLnyW5dTXl6OF198EU1NTQiFQnpvobi4
      GJs3b0ZaWhr8fj8mTpwIAKioqMA777yD1atXx9WGr8vOzsaWLVtw+fJl9PX1IRKJQBAE3HLL
      LVizZg0yMzPh8/lw2223IRqNYufOnUhNTUVzczNWrlwJt9uNF154AWfOnNGHJSRJQlJSEtau
      XaufnRcXFwO4Et5utxtOp/M7Q/6bxo0bh/379yM1NRUAUFpaig8++ABLliwBcOXs+ODBg3j+
      +echCAKSk5PxR3/0R6iqqsILL7yArKwstLa2fuvZuyAImDp1Kg4cOIDf//73AK4E9B133IFN
      mzbpNyeMGzcOAPDGG29g1qxZKC0txQsvvIAVK1YgKysr5u//Wgfd7OxsPP/88xBFEe3t7frf
      /LpgMIi1a9ciNTUVHR0dqKqqQk5ODiRJwnPPPQdRFNHS0gLgytDohg0bcO7cOUQiEX34wmaz
      Yfr06fjggw+GfGb9bW241jz981VVVWHNmjX6dvSDH/wAaWlpaG5uxtq1axEKhfR9GgDmzp2L
      p59+Gj/5yU+GXGNvby9effVV/Y4ol8uFCRMmoLu7G+vXr0d6ejqCwaB+x055eTleeOEF5Obm
      4u6770Zubi7WrVsHt9uNrq4uzJs375p/J962/T/LbLYlDwIQ+gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='total reacted time spend per month' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='total reacted time spend per week' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='z-score of completion time per day' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='z-score of reaction time per day' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdaXBkV2E24PfcpfdNrX0ZzT7jWRgb24TYxDZLki/kA7twAuEPRUJcoSop
      8iuVkPAHSIpAUYkTPkgKAq6YChRQxA6YxMYGG4yxDTFeZ9+l0d77ervvdr4fLbWkUc+M1GqN
      WtPvU+VFV62j063u896z3HOFlFKCiIg6jrLZFSAios3BACAi6lAMACKiDsUAICLqUAwAIqIO
      teUDwHGcza4CEdGWtOUDwHXdza4CEdGWtOUDgIiImtM2AWDbNsrl8rJjjuMgkUggkUiA16sR
      EbWWttkVcF0Xp0+fxuOPP469e/fiPe95DwBgcnIS3//+9xGJRFAsFtHb24v3ve99DctgOBAR
      rd2mB0Amk8HJkyfxjne8A2NjY/Xjtm3j/e9/P3p6eiClxFe+8hUUCgUEAgHYtl1/nJQSlmVt
      RtWJiLa0TQ+AeDyO++67D5cuXVoWANu3bwdQa+AnJiZgWRb8fj80TYOmLVbbsizoun7d601E
      tNVtegAIIa74Pcdx8Nxzz+Ho0aP44Ac/yIaeiKiFNj0ArsRxHPzXf/0XpJT4yEc+Ar/fv9lV
      IiK6obTNKqDLHT9+HIZh4P7772fjT0S0AcRm3w/gwoULeOaZZ1AqlZBOp7Ft2zbcfffdOHr0
      KE6ePImuri4AgMfjwf33349oNLrs5zkHQETUnE0PACnlimWcQoiGSzuFECvmDBgARETN2fQ5
      gEaN+sJxIiLaOG07B0BERBuLAUBE1KEYAEREHYoBQETUoRgAREQdigFARNShGABERB2KAUBE
      1KEYAEREHYoBQETUoRgAREQdigFARNShGABERB2KAUBE1KEYAEREHYoBQETUoRgAREQdigFA
      RNShGABERB2KAUBE1KEYAEREHYoBQETUoRgAREQdigFARNShGABERB2KAUBE1KEYAEREHYoB
      QETUoRgAREQdigFARNShGABERB2KAUBE1KEYAEREHYoBQETUoRgAREQdigFARNShGABERB2K
      AUBE1KEYAEREHWrTA0BKidnZWbzyyivLjqdSKTz++ON4+umnUSqVNql2REQ3rk0NAMdx8IMf
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
